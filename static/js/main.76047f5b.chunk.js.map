{"version":3,"sources":["store/actions/network.action.ts","store/reducers/network.reducer.ts","store/actions/app.action.ts","Providers/storage.service.ts","store/reducers/app.reducer.ts","store/actions/socket.action.ts","store/reducers/socket.reducer.ts","store/actions/web-socket.action.ts","store/reducers/web-socket.reducer.ts","store/reducers/index.ts","store/index.ts","Providers/core.service.ts","components/misc/DropdownClick/DropdownClick.tsx","Providers/helpers.ts","Providers/index.ts","Providers/Workspace.service.ts","Providers/socket.service.ts","components/misc/TypePill/TypePill.tsx","components/misc/WorkspaceToggle/WorkspaceToggle.tsx","Providers/web-socket.service.ts","components/modules/WebSocketActivity/WebSocketActivity.tsx","components/modules/WebSocketRequestView/WebSocketRequestView.tsx","components/modules/SocketIOActivity/SocketIOActivity.tsx","components/misc/Blank/Blank.tsx","components/modules/SocketIORequestView/SocketIORequestView.tsx","components/Layout/Layout.tsx","components/misc/Modal/Modal.tsx","components/misc/Overlay/Overlay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["types","initialState","loading","isPc","window","innerWidth","setTitle","data","dispatch","title","image","icon","document","length","substring","type","payload","setActiveTree","STORAGE_CONSTANTS","setBodyDarkMode","mode","body","querySelector","className","darkMode","localStorage","setItem","getItem","dontAskDarkMode","userData","name","activeTree","finishedAuthenticationAttempt","setTrackers","status","tracker","activities","combineReducers","network","state","action","app","newMode","socketIO","webSocket","env","require","middleware","thunk","compose_","compose","applyMiddleware","prod","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","getId","Math","random","toString","DebounceTime","time","ref","active","start","fn","clearTimeout","setTimeout","this","BehaviourSubject","value","initialValue","lastValue","fns","next","newValue","subscribe","id","Object","values","forEach","_fn","unSubscribe","keys","sendToCollectionObs","toastObs","shareObs","modalObs","alertObs","confirmObs","selectObs","promptObs","toasterBehaviourSubj","toaster","_timer","timer","incoming","attention","prompter","text","Promise","resolve","reject","cb","val","throwError","DropdownClick","textArea","copy","props","useState","clicked","setClicked","DropdownClickRef","useRef","clickedFunRef","scrollRef","componentIsMounted","oneRef","preSetClicked","onScrollClose","current","removeEventListener","addEventListener","useEffect","prevStyle","style","verticalAlign","zIndex","block","onClick","e","target","match","parent","child","node","parentNode","isDescendant","children","width","childBlock","clientWidth","bodyTypeParser","bodyType","JSON","parse","parseInt","selectText","range","selection","navigator","userAgent","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","select","createElement","appendChild","createTextArea","execCommand","removeChild","workspaces","activeWorkSpaceKey","activeWorkspaceData","socketIOUrl","webSocketUrl","version","isSocketIOConnection","folders","webSocketRequest","idToRequestHash","defaultWebSocketRequest","emitBody","defaultFolderStructure","serverUrl","isFolder","isFolderOpened","event","listenBody","defaultWorkspacesStructure","key","WorkspaceService","stringify","location","reload","_workspace","getWorkspaces","changeWorkspace","persist","url","folderParse","dd","d","tree","targetC","options","localFolders","treeSplit","split","filter","_","treeIndex","treeDataModifierF","lastLoop","folderTree","setDataFolders","emit","foldersObs","c","loadWorkspaces","load","generateRequestHash","listenEventToId","lastListenEvent","socketService","socket","host","io","on","message","emitActivity","connected","disconnect","initialize","h","getRequestHash","b","initializeOnConnect","listen","addActivity","removeListener","emitTracker","destroy","console","log","TypePill","marginTop","WorkspaceToggle","activeWorkspace","getActiveWorkspaceKey","a","addWorkspace","top","position","map","w","i","webSocketService","WebSocket","onopen","onmessage","onclose","getWebSocketRequest","forced","close","send","connect","eventsDisplayRef","scrollTo","left","scrollHeight","behavior","height","overflow","activity","isActivityEmit","marginLeft","marginRight","display","textAlign","readOnly","lineNumbers","scrollBeyondLastLine","minimap","enabled","wordWrap","automaticLayout","theme","language","bodyTypes","notifications","saved","setSaved","activeCellIndex","setActiveCellIndex","activeRequest","setActiveRequest","subs","saveKeyRef","save","CollectionsService","setWebSocketRequest","alert","envJson","onbeforeunload","activeElement","keyCode","metaKey","ctrlKey","nodeName","preventDefault","sub","disabled","defaultValue","cell","borderBottomWidth","onChange","ev","handleEditorChange","scope","clone","DEFAULTS","events","setEvents","keyGen","hash","prevValue","undefined","setEventRefF","totalEvents","activeEvents","opened","k","checked","showEvent","Blank","alignItems","socketIOIO","requestTree","setRequestTree","showDetails","setShowDetails","showActivity","setShowActivity","tabs","setTabs","navbarCriticalChangedRef","cells","handleChange","treeDataModifier","deleteTab","tab","tabsClone","t","activateTab","history","push","pathname","ids","getRequestFromId","cancelListen","indexOf","request","plausibleOldEmittions","getLastListenEvent","listenerBody","alreadyListening","editNameAndDescription","overflowX","overflowY","whiteSpace","tabTreeToName","description","placeholder","script","setUserData","toggleDarkMode","sidebarMin","setSidebarMin","getIsSocketIOConnection","setIsSocketIOConnection","getServerUrl","socketUrl","setSocketUrl","lastSelectedFolderTree","setLastSelectedFolderTree","collections","setCollections","contextMenu","setContextMenu","contextRef","lastFolderRef","collectionsModified","isSocketConnected","matchMedia","matches","storage","then","catch","paramsTree","URLSearchParams","search","get","onCollectionEvent","f","user","idFromTree","treeName","other","collectionTree","index","removeFromTrackerIfExist","clipboard","readText","clipboardText","parsed","childrenRef","setContextMenuF","CollectionRenderer","collection","isFirstTree","onContextMenu","x","pageX","y","pageY","lastFolderCB","paddingLeft","ContextMenu","src","fontSize","href","transform","bottom","setServerUrl","app-data-intro","app-data-step","exact","path","to","component","SocketIORequestView","WebSocketRequestView","Modal","onClose","preventCloseOnClickOutside","jsx","dangerouslySetInnerHTML","__html","Overlay","toastData","setToastData","shareContent","setShareContent","modalContent","setModalContent","confirmContent","setConfirmContent","alertContent","setAlertContent","selectContent","setSelectContent","promptContent","setPromptContent","res","incomingToastData","incomingShareContent","incomingModalContent","incomingConfirmContent","incomingAlertContent","incomingSelectContent","incomingPromptContent","helperCopy","open","encodeURIComponent","media","option","optionText","optionInfo","info","htmlFor","monaco","init","editor","defineTheme","base","inherit","colors","rules","token","background","foreground","fontStyle","App","Layout","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.76047f5b.chunk.js","sourcesContent":["\n\nexport const types = {\n   LOADINGSTART : 'LOADINGSTART',\n   LOADINGEND : 'LOADINGEND',\n}\n\nexport const loading = (start: any) => (dispatch: any) => {\n  \n    if(start) {\n        dispatch({\n            type: types.LOADINGSTART\n        })\n    } else {\n        dispatch({\n            type: types.LOADINGEND\n        })\n    }\n  \n\n\n   \n}\n\n","import { types } from '../actions/network.action'\n\n\nconst initialState = {\n   \n      loading: false\n    \n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.LOADINGSTART:\n            \n            return {\n                ...state, loading: true\n            }\n        case types.LOADINGEND:\n            \n            return {\n                ...state, loading: false\n            }\n\n  \n        default:\n            return state;\n\n    }\n\n}","\nexport const types = {\n   SETTITLE : 'SETTITLE',\n   SETAPPFONT : 'SETAPPFONT',\n    SETUSERDATA : 'SETUSERDATA',\n    SETDARKMODE : 'SETDARKMODE',\n    SETACTIVETREE : 'SETACTIVETREE',\n \n}\nconst isPc = window.innerWidth > 800;\nexport const setTitle = (data: any) => (dispatch: any) => {\n  let title = data.title || data\n  const image = data.image || ''\n  const icon = data.icon || ''\n    document.title = `Plugman - ${title} `;\n\n    if(!isPc && title.length > 20){\n        title = (title as string).substring(0, 20) + ' ...'\n\n    }\n        dispatch({\n            type: types.SETTITLE,\n            payload: {title, image, icon}\n        })\n\n\n\n   \n}\nexport const setAppFont = (id: any) => (dispatch: any) => {\n   \n\n\n\n\n    \n\n\n        dispatch({\n            type: types.SETAPPFONT,\n            payload: id\n        })\n\n\n\n   \n}\nexport const setUserData = (data: any) => (dispatch: any) => {\n  \n\n        dispatch({\n            type: types.SETUSERDATA,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setActiveTree = (data: any) => (dispatch: any) => {\n  \n\n        dispatch({\n            type: types.SETACTIVETREE,\n            payload: data\n        })\n\n\n\n   \n}\n\nexport const toggleDarkMode = () => (dispatch: any) => {\n    \n\n        dispatch({\n            type: types.SETDARKMODE\n        })\n\n\n\n   \n}\n\n","\n\nconst STORAGE_CONSTANTS = {\n    DARK_MODE: 'dark-mode',\n    DONT_ASK_DARK_MODE: 'DONT-ASK-dark-mode'\n \n\n}\n\n\n\nfunction setBodyDarkMode(mode: string | boolean) {\n    const body = document.querySelector('body');\n\n    if (!body) {\n        return;\n    }\n\n    if (mode === 'true' || mode === true) {\n        body.className = 'bg-app-dark';\n    } else {\n        body.className = 'bg-app-default';\n    }\n\n}\n\n\n\n\n\nexport const darkMode = {\n    set: (mode: string) => {\n\n        setBodyDarkMode(mode)\n\n        return localStorage.setItem(STORAGE_CONSTANTS.DARK_MODE, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.DARK_MODE)\n        // @ts-ignore\n        setBodyDarkMode(mode)\n\n        return mode\n    }\n\n\n}\nexport const dontAskDarkMode = {\n    set: (mode: string) => {\n\n \n\n        return localStorage.setItem(STORAGE_CONSTANTS.DONT_ASK_DARK_MODE, mode)\n    },\n    get: () => {\n        const mode = localStorage.getItem(STORAGE_CONSTANTS.DONT_ASK_DARK_MODE)\n        // @ts-ignore\n \n\n        return mode\n    }\n\n\n}\n\n\n\n","\nimport { types } from '../actions/app.action'\nimport { darkMode} from '../../Providers/storage.service'\n\n\nconst initialState = {\n\n    title: '',\n   \n    userData: {\n        name: 'ayo'\n    },\n    activeTree: '',\n    finishedAuthenticationAttempt: false,\n    darkMode: darkMode.get() === 'true'\n\n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SETTITLE:\n\n            return {\n                ...state, title: action.payload\n            }\n      \n   \n     \n        case types.SETDARKMODE:\n\n            const newMode = !state.darkMode\n            darkMode.set(newMode + '')\n\n\n            return {\n                ...state, darkMode: !state.darkMode\n            }\n        case types.SETACTIVETREE:\n\n          \n            return {...state, activeTree: action.payload}\n\n\n        default:\n            return state;\n\n    }\n\n}","\n\nexport const types = {\n   SET_SOCKET_STATUS : 'SET_SOCKET_STATUS',\n   SET_TRACKERS : 'SET_TRACKERS',\n    ADD_ACTIVITY:'ADD_ACTIVITY'\n\n}\n\nexport const setStatus = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_SOCKET_STATUS,\n            payload: data\n        })\n\n\n\n   \n}\nexport const addActivity = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.ADD_ACTIVITY,\n            payload: data\n        })\n\n\n\n   \n}\nexport const setTrackers = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_TRACKERS,\n            payload: data\n        })\n\n\n\n   \n}\n","\nimport { types } from '../actions/socket.action'\n\n\nconst initialState = {\n\n    status: {},\n    tracker: {},\n    activities: []\n}\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SET_SOCKET_STATUS:\n\n\n\n            return { ...state, status: action.payload }\n        case types.SET_TRACKERS:\n\n\n\n            return { ...state, tracker: action.payload }\n        case types.ADD_ACTIVITY:\n\n\n\n            return { ...state, activities: [...state.activities, action.payload] }\n\n\n\n\n        default:\n            return state;\n\n    }\n\n}","\n\nexport const types = {\n   SET_SOCKET_STATUS : 'SET_SOCKET_STATUS',\n    ADD_ACTIVITY: 'ADD_ACTIVITY'\n  \n\n}\n\nexport const setStatus = (data: any) => (dispatch: any) => {\n\n        dispatch({\n            type: types.SET_SOCKET_STATUS,\n            payload: data\n        })\n\n\n\n   \n}\n\nexport const addActivity = (data: any) => (dispatch: any) => {\n\n    dispatch({\n        type: types.ADD_ACTIVITY,\n        payload: data\n    })\n\n\n\n\n}","\nimport { types } from '../actions/web-socket.action'\n\n\nconst initialState = {\n\n    status: {},\n    activities: []\n}\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case types.SET_SOCKET_STATUS:\n\n\n\n            return { ...state, status: action.payload }\n        case types.ADD_ACTIVITY:\n\n\n\n            return { ...state, activities: [...state.activities, action.payload] }\n\n\n\n        default:\n            return state;\n\n    }\n\n}","import {combineReducers} from 'redux';\n\nimport networkReducer from './network.reducer';\nimport appReducer from './app.reducer';\nimport socketIOReducer from './socket.reducer';\nimport webSocketReducer from './web-socket.reducer';\n\nexport default combineReducers({\n    network: networkReducer,\n    app: appReducer,\n    socketIO: socketIOReducer,\n    webSocket: webSocketReducer\n\n})","import { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst  env  =  require('../env.json')\n\nconst initialState = {}\nconst middleware = [thunk]\n\n\nlet compose_ = compose(applyMiddleware(...middleware))\n\nif(!env.prod) {\n  // @ts-ignore\n    compose_ = compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst store = createStore(rootReducer, initialState, \n  compose_\n    )\n\nexport {store, Provider};","export const getId = () => {\n  return 'a' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\nexport class DebounceTime {\n\n  time = 400\n  ref: any;\n  active = false;\n  public start = (fn: Function, time?: number) => {\n    if (this.ref) {\n      clearTimeout(this.ref)\n    }\n\n    this.active = true;\n    if (time) {\n      this.time = time\n    }\n    const deffFun = () => {\n      fn()\n      this.active = false\n    }\n\n    this.ref = setTimeout(deffFun, this.time);\n  }\n  public destroy() {\n    clearTimeout(this.ref)\n  }\n\n\n}\n\n\nexport class BehaviourSubject {\n  initialValue = null\n  lastValue = null\n  // @ts-ignore\n  fns: { [id: string]: Function } = {};\n  constructor(value: any) {\n    this.lastValue = value\n    this.initialValue = value\n  }\n\n  public next = (newValue: any) => {\n    this.lastValue = newValue\n    this.subscribe()\n\n  }\n  public subscribe = (fn?: Function, value?: any) => {\n    let id: string;\n    if (fn) {\n      id = getId()\n      this.fns[id] = fn\n\n\n    }\n\n    if (this.fns) {\n      Object.values(this.fns).forEach(_fn => {\n        _fn(this.lastValue)\n      })\n\n    }\n\n\n    if (fn) {\n\n      return {\n        unSubscribe: () => {\n          delete this.fns[id]\n          if (Object.keys(this.fns).length === 0) {\n            this.lastValue = this.initialValue\n\n          }\n\n        }\n      }\n    }\n\n  }\n}\n\n\nexport const refreshUserDataObs = new BehaviourSubject(true)\nexport const sendToCollectionObs = new BehaviourSubject(null)\nexport const possibleResizeObs = new BehaviourSubject(false)\n\n\n\nexport const toastObs = new BehaviourSubject(null)\nexport const shareObs = new BehaviourSubject(null)\nexport const modalObs = new BehaviourSubject(null)\nexport const alertObs = new BehaviourSubject(null)\nexport const confirmObs = new BehaviourSubject(null)\nexport const selectObs = new BehaviourSubject(null)\nexport const promptObs = new BehaviourSubject(null)\nconst toasterBehaviourSubj = [new DebounceTime(), new DebounceTime()]\nexport const toaster = (data: any, _timer?: number) => {\n\n    const timer = _timer || 5000\n    toastObs.next({ ...data, incoming: true })\n\n    if (data.attention) {\n        toastObs.next({ ...data, incoming: true });\n        return;\n    }\n    toasterBehaviourSubj[0].start(() => toastObs.next(null), timer)\n\n\n    toasterBehaviourSubj[1].start(() => toastObs.next({ ...data, incoming: false }), timer - 500)\n}\nexport const modaler = (data: any) => {\n    return new Promise((resolve, reject) => {\n        modalObs.next({\n            ...data, cb: (closed: boolean) => {\n                resolve(closed)\n\n            }\n        })\n    })\n}\nexport const confirmer = (text: string, body? : string) => {\n\n    return new Promise((resolve, reject) => {\n        confirmObs.next({\n          text, body, cb: (val: boolean, throwError?: boolean) => {\n            if (throwError) {\n              reject(val)\n              return\n            } resolve(val)\n\n            }\n        })\n    })\n\n}\nexport const alerter = (text: string, body? : string) => {\n\n    return new Promise((resolve, reject) => {\n        alertObs.next({\n          text, body\n        })\n    })\n\n}\nexport const selecter = (data: any) => {\n\n    return new Promise((resolve, reject) => {\n        selectObs.next({\n          ...data, cb: (val: boolean, throwError?: boolean) => {\n            if (throwError) {\n              reject(val)\n              return\n            } resolve(val)\n\n            }\n        })\n    })\n\n}\nexport const prompter = (text: any, value?: string) => {\n\n    return new Promise((resolve, reject) => {\n        promptObs.next({\n            text,\n            value, \n            \n            cb: (val: boolean, throwError?: boolean) => {\n              if(throwError){\n                reject(val)\n                return\n              }\n                resolve(val)\n\n            }\n        })\n    })\n\n}\n\n\n\n\n\n\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport './DropdownClick.scss'\nimport { getId } from '../../../Providers';\n\n\n\nfunction isDescendant(parent: HTMLElement, child: HTMLElement) {\n    var node = child.parentNode;\n    while (node != null) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\nfunction DropdownClick(props: any) {\n\n    const [clicked, setClicked] = useState(false);\n    const DropdownClickRef = useRef(null as any);\n    const clickedFunRef = useRef(null as any);\n    const scrollRef = useRef({\n\n        fn: () => { }\n    });\n    const componentIsMounted = useRef(true)\n    const oneRef = useRef(null as unknown as HTMLDivElement)\n\n\n    function preSetClickedFun(value: boolean) {\n        const elem: HTMLDivElement | null = DropdownClickRef.current;\n        if (props.onClick) {\n            props.onClick(value)\n        }\n        if (value) {\n\n\n\n            clickedFunRef.current = (e: any) => {\n\n                // @ts-ignore\n                if ((e.target.className.match('dropdown-click-close') || !isDescendant(DropdownClickRef.current, e.target)) && componentIsMounted.current) {\n                    if (props.onClick) {\n                        props.onClick(false)\n                    }\n                    window.removeEventListener('click', clickedFunRef.current)\n                    preSetClicked(false)\n                }\n            }\n            \n            window.addEventListener('click', clickedFunRef.current)\n\n        } else {\n\n\n            if (clickedFunRef.current) {\n\n                window.removeEventListener('click', clickedFunRef.current)\n            }\n        }\n\n        preSetClicked(value);\n    }\n    function preSetClicked(value: boolean) {\n        function onScroll() {\n       \n    \n                setClicked(false);\n                // remove listener\n                document.removeEventListener('scroll', scrollRef.current.fn, true)\n\n            \n\n        }\n\n\n\n        if (props.onScrollClose) {\n            if (value) {\n                scrollRef.current.fn = onScroll;\n\n                // listen to scroll event\n                document.addEventListener('scroll', scrollRef.current.fn, true)\n\n\n            } else {\n                document.removeEventListener('scroll', scrollRef.current.fn, true)\n\n            }\n        }\n        setClicked(value)\n    }\n\n    useEffect(() => {\n\n\n        return () => {\n            componentIsMounted.current = false;\n\n\n            if (clickedFunRef.current) {\n                window.removeEventListener('click', clickedFunRef.current)\n                document.removeEventListener('scroll', scrollRef.current.fn, true);\n            }\n        };\n    }, []);\n\nconst prevStyle = props.style || {};\n    return (\n        <div ref={DropdownClickRef} style={{\n            ...prevStyle,\n\n            verticalAlign: 'top',\n            zIndex: clicked ? 5 : 1\n        }} className={'DropdownClick ' + (props.block ? 'd-block' : 'd-inline-block')}>\n            <div\n            ref={oneRef}\n            \n\n                onClick={() => preSetClickedFun(!clicked)} className='one'>\n                {props.children[0]}\n            </div>\n            {clicked &&\n                <div className='two' style={{ width: props.childBlock ? oneRef.current.clientWidth+ 'px' : 'auto'}}>\n                    {props.children[1]}\n                </div>}\n\n\n\n        </div>\n    )\n\n}\n\nexport default DropdownClick;","\nimport { getId } from './index';\n\n\nexport const bodyTypeParser = (bodyType: any, body: any) =>{\n\n    if (bodyType == 'object') {\n        return JSON.parse(body)\n    } else if (bodyType == 'number') {\n        return parseInt(body)\n\n    } else if (bodyType == 'json') {\n        if (!JSON.parse(body)) {\n            throw \"invalid json\"\n        }\n    }\n\n    return body;\n\n} \n\n\nexport class BehaviourSubject {\n    initialValue = null\n    lastValue = null\n    // @ts-ignore\n    fns: { [id: string]: Function } = {};\n    constructor(value: any) {\n        this.lastValue = value\n        this.initialValue = value\n    }\n\n    public next = (newValue: any) => {\n        this.lastValue = newValue\n        this.subscribe()\n\n    }\n    public subscribe = (fn?: Function, value?: any) => {\n        let id: string;\n        if (fn) {\n            id = getId()\n            this.fns[id] = fn\n\n\n        }\n\n        if (this.fns) {\n            Object.values(this.fns).forEach(_fn => {\n                _fn(this.lastValue)\n            })\n\n        }\n\n\n        if (fn) {\n\n            return {\n                unSubscribe: () => {\n                    delete this.fns[id]\n                    if (Object.keys(this.fns).length === 0) {\n                        this.lastValue = this.initialValue\n\n                    }\n\n                }\n            }\n        }\n\n    }\n}\n\n\nexport const objectClone = <T>(obj: T) => {\n\n    if (!obj) {\n        return obj\n    }\n\n\n    return JSON.parse(JSON.stringify(obj)) as T\n}\n\nexport const wait = (miliseconds: number = 5000) => {\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve()\n        }, miliseconds);\n    })\n\n}\n\n\nlet textArea: any;\nexport let copy: any;\n\nfunction isOS() {\n    return navigator.userAgent.match(/ipad|iphone/i);\n}\n\nfunction createTextArea(text: any) {\n\n    textArea = document.createElement('textArea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n}\n\nfunction selectText() {\n    let range: any,\n        selection: any;\n\n    if (isOS()) {\n        range = document.createRange();\n        range.selectNodeContents(textArea);\n        selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n        textArea.setSelectionRange(0, 999999);\n    } else {\n        textArea.select();\n    }\n}\n\nfunction copyToClipboard() {\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n}\n\ncopy = function (text: any) {\n    createTextArea(text);\n    selectText();\n    copyToClipboard();\n};\n","import { CONSTANTS } from './../env';\nimport * as storage from './storage.service'\nexport const getId = () => {\n    return 'a' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}","import { getId } from './index';\nimport { BehaviourSubject } from './helpers';\n\nexport const TYPE_KEYS = {\n    SOCKETIO: 'socket-io',\n    WEBSOCKETS: 'web-sockets'\n}\n\nlet activeWorkSpaceKey = 'default-workspace'\nlet activeWorkspaceData: {\n    name: string;\n    socketIOUrl: string;\n    webSocketUrl: string;\n    version: string;\n    isSocketIOConnection: boolean\n    folders: any[]\n    webSocketRequest: any\n\n} = {\n    name: '',\n    socketIOUrl: '',\n    webSocketUrl: '',\n    version: '',\n    isSocketIOConnection: false,\n    folders: [],\n    webSocketRequest:{\n\n    }\n\n}\nconst idToRequestHash: any = {\n\n}\nconst defaultWebSocketRequest = {\n\n    bodyType: \"object\",\n    emitBody: `{\"foo\": \"bar\"}`\n}\nconst defaultFolderStructure = {\n    name: 'default',\n    version: '1.1',\n    serverUrl: '',\n    folders: [\n \n    {\n        id: getId(),\n        name: 'Example SocketIO Collection 😉',\n        isFolder: true,\n        isFolderOpened:true,\n        children:[\n            {\n                id: getId(),\n                name: 'Sample emit request',\n                isFolder: false,\n                event: \"message\",\n                type: \"emit\",\n                emitBody: `{\"foo\": \"bar\"}`\n            },\n            {\n                id: getId(),\n                name: 'Sample listen request',\n                isFolder: false,\n                event: \"message\",\n                type: \"listen\",\n                listenBody: `{\"foo\": \"bar\"}`\n            },\n            {\n                id: getId(),\n                name: 'i am a request in a collection',\n                isFolder: false,\n                event: \"message_listener\",\n                type: \"listen\",\n                listenBody: `{\"foo\": \"bar\"}`\n            },\n        ],\n    },\n    {\n        id: getId(),\n        name: 'Right click on me to see  options',\n        isFolder: true,\n        children:[\n        \n        ],\n    }\n],\n    webSocketRequest: defaultWebSocketRequest\n \n\n\n}\n\nconst defaultWorkspacesStructure = {\n    'default-workspace':{name:'Default', key: 'default-workspace'}\n}\nlet workspaces: any;\n\n/**\n * Helps to remove un wanted code next time the application initializes\n * @param data\n */\nfunction sanitize(data: any){\n\n\n    return data\n\n}\n    export const  isSocketIOConnection = () => {\n    return activeWorkspaceData.isSocketIOConnection || false\n}\nexport class WorkspaceService {\n\n    public static persist() {\n        localStorage.setItem(activeWorkSpaceKey, JSON.stringify(activeWorkspaceData))\n\n    }\n    public static load() {\n        activeWorkspaceData = sanitize(JSON.parse(localStorage.getItem(activeWorkSpaceKey) || JSON.stringify(defaultFolderStructure)))\n\n    }\n    // ww\n    public static loadWorkspaces() {\n        workspaces = JSON.parse(localStorage.getItem('workspaces') || JSON.stringify(defaultWorkspacesStructure))\n        activeWorkSpaceKey = localStorage.getItem('active-workspace') || activeWorkSpaceKey\n\n       \n    }\n    public static getWorkspaces() {\n        return  workspaces;\n\n    }\n    public static changeWorkspace(key:string) {\n        if(key == activeWorkSpaceKey){\n            return\n        }\n        localStorage.setItem('active-workspace', key)\n        window.location.reload()\n\n    }\n    public static addWorkspace(name:string) {\n        name = name.substring(0,13)\n        const key: string = getId()\n        const _workspace = this.getWorkspaces()\n        _workspace[key]={name,key}\n\n        localStorage.setItem('workspaces', JSON.stringify(_workspace))\n        localStorage.setItem('active-workspace', key)\n        this.changeWorkspace(key);\n\n    }\n    public static getActiveWorkspaceKey() {\n        return  activeWorkSpaceKey\n\n    }\n    public static getIsSocketIOConnection(){\n\n        return isSocketIOConnection();\n\n    }\n    public static setIsSocketIOConnection(value: boolean) {\n\n        activeWorkspaceData.isSocketIOConnection = value;\n        this.persist()\n\n    }\n    public static setWebSocketRequest(data: any) {\n\n        activeWorkspaceData.webSocketRequest = data;\n        this.persist()\n\n    }\n    public static getServerUrl(){\n     \n        let serverUrl ;\n        if (isSocketIOConnection()){\n            serverUrl = activeWorkspaceData.socketIOUrl;\n\n        } else {\n            serverUrl = activeWorkspaceData.webSocketUrl;\n        }\n\n        return serverUrl;\n\n    }\n    public static setServerUrl(url:string){\n\n    \n        if (isSocketIOConnection()) {\n             activeWorkspaceData.socketIOUrl = url;\n\n        } else {\n             activeWorkspaceData.webSocketUrl = url;\n        }\n\n     \n        this.persist()\n\n    }\n\n\n    private static setDataFolders(folders: any[]) {\n        activeWorkspaceData.folders = folders;\n    }\n    public static generateRequestHash() {\n        function folderParse(dd: any[]) {\n            dd.forEach(d => {\n                if (d.isFolder) {\n                    folderParse(d.children || [])\n                } else {\n                    idToRequestHash[d.id] = d\n                }\n            })\n\n        }\n        folderParse(activeWorkspaceData.folders)\n\n    }\n    public static getRequestHash() {\n        return idToRequestHash;\n\n\n\n    }\n    public static getWebSocketRequest() {\n        return activeWorkspaceData.webSocketRequest || defaultWebSocketRequest;\n\n\n\n    }\n    public static getRequestFromId(tree: string) {\n\n        return idToRequestHash[tree]\n\n    }\n    public static treeDataModifier(options: any = {}, tree: string, cb?: any, localFolders?: any[]): any {\n        const treeSplit = tree.split('/').filter(_ => _)\n\n        let treeIndex = 0;\n        let targetC;\n\n\n        function treeDataModifierF(cb?: any, localFolders?: any[]): any {\n            let lastLoop = false;\n            if (treeIndex === (treeSplit.length - 1)) {\n                lastLoop = true\n            }\n            let folderTree: any[] = localFolders || JSON.parse(JSON.stringify(activeWorkspaceData.folders));\n\n\n            if (treeSplit.length === 0) {\n\n                if (cb) {\n                    cb(null, folderTree)\n\n                }\n                WorkspaceService.setDataFolders(folderTree);\n                if (options.emit) {\n\n                    foldersObs.next(activeWorkspaceData.folders);\n                }\n                return { c: null, folderTree }\n\n            }\n\n\n\n\n\n\n            const id = treeSplit[treeIndex];\n\n\n\n            for (let c of folderTree) {\n                if (c.id === id) {\n                    targetC = c;\n\n                    if (c.isFolder && (treeIndex < (treeSplit.length - 1))) {\n\n                        treeIndex++\n                        treeDataModifierF(cb, c.children)\n\n\n                    }\n\n\n\n                    if (cb && lastLoop) {\n\n                        cb(c, folderTree)\n\n                    }\n                    WorkspaceService.setDataFolders(folderTree);\n                    if (options.emit) {\n\n                        foldersObs.next(activeWorkspaceData.folders);\n                    }\n\n                    return { c: targetC, folderTree }\n\n                }\n            }\n\n\n        }\n\n      \n        try {\n         \n\n            return treeDataModifierF(cb, localFolders)\n            //  data = data.[]\n\n\n        }\n        catch (e) {\n\n            return null\n\n        }\n\n    }\n\n\n\n\n}\nWorkspaceService.loadWorkspaces()\nWorkspaceService.load()\nWorkspaceService.generateRequestHash();\n\nexport const foldersObs = new BehaviourSubject(activeWorkspaceData.folders)\n\n\n\n\nexport default WorkspaceService","import { WorkspaceService } from './Workspace.service';\nimport { toaster } from './core.service';\nimport io from 'socket.io-client';\nimport { store } from '../store';\nimport { addActivity, setStatus, setTrackers } from '../store/actions/socket.action';\n\n\nlet tracker: {\n    [id: string]: {\n        type: 'emit' | 'listen'\n        event: string\n    }\n\n} = {}\nlet listenEventToId:{\n    [event: string]: string\n\n}={}\nlet lastListenEvent: any = {}\nlet status: any = {}\n\n//hello\nclass SocketService {\n    // @ts-ignore\n    socket: SocketIOClient.Socket;\n    // @ts-ignore\n    host: string;\n    private initialize(host: string, cb?: any) {\n       \n            this.host = host;\n            this.socket = io(host)\n\n            this.socket.on('connect', () => {\n                toaster({ type: 'success', message: `<i class='fa fa-plug mr-2 '> </i>  Connected 🎉🎉` })\n                if(cb){\n                    cb(true)\n                }\n               \n                this.emitActivity('listen', 'connect')\n                status.connected = true\n                this.next()\n\n            \n            this.socket.on('disconnect', () => {\n\n                this.disconnect()\n                // this.initialize(this.host)\n\n            })\n\n        })\n      \n    }\n    public connect(host: string) {\n        this.initialize(host, () => {\n            const h = WorkspaceService.getRequestHash()\n            Object.values(h).forEach((b: any) => {\n                if (b.type === 'emit' && b.event && b.initializeOnConnect) {\n                    this.emit(b.id, b.event, b.emitBody)\n                }\n                if (b.type === 'listen' && b.event && b.initializeOnConnect) {\n                    this.listen(b.id, b.event)\n                }\n            })\n\n        })\n  \n      \n\n     \n\n     \n    }\n    private next() {\n        store.dispatch(setStatus(status))\n    }\n    private emitActivity(type: string, event: string, data?: any) {\n        store.dispatch(addActivity({ type, event, data }))\n\n    }\n    private emitTracker(id?: string, data?: any) {\n        if (!id) {\n            tracker = {};\n            store.dispatch(setTrackers(tracker))\n            return\n        }\n        if (!data) {\n            delete tracker[id];\n        } else {\n            tracker[id] = data\n        }\n\n\n\n        store.dispatch(setTrackers(tracker))\n\n    }\n    getLastListenEvent(event: string){\n        return lastListenEvent[event]\n    }\n    removeFromTrackerIfExist(id:string){\n        \n        if(tracker[id]){\n            if (tracker[id].type === 'listen'){\n                delete listenEventToId[tracker[id].event]\n                delete lastListenEvent[tracker[id].event]\n                this.socket.removeListener(tracker[id].event);\n            }\n            this.emitTracker(id)\n        }\n\n    }\n    public disconnect() {\n        toaster({ type: 'danger', message: `<i class='fa fa-warning mr-2 '> </i>  Disconnected` })\n        // @ts-ignore\n        this.socket.destroy();\n        // @ts-ignore\n        delete this.socket;\n        // @ts-ignore\n        this.socket = null;\n\n        status.connected = false\n        this.emitActivity('listen', 'disconnect')\n        this.emitTracker()\n        this.next()\n        listenEventToId = {}\n        lastListenEvent = {}\n    }\n\n    cancelListen(id: string, event: string) {\n        this.emitTracker(id)\n        delete listenEventToId[event]\n        delete lastListenEvent[event]\n        this.socket.removeListener(event);\n    }\n  \n\n    listen(id: string, event: string) {\n       \n        if (listenEventToId[event] ){\n            toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i>  A request is already listening to this event \"<b>${event}</b>\"` })\n            return\n        }\n        if (tracker[id] && tracker[id].type === 'listen') {\n            return;\n        }\n        this.emitTracker(id, {\n            type: 'listen',\n            event\n\n        })\n \n        listenEventToId[event] = id;\n\n        this.socket.on(event, (data: any) => {\n         \n            console.log({event})\n           \n        \n            lastListenEvent[event] = (typeof data === 'string' ? data : JSON.stringify(data))\n            this.emitActivity('listen', event, (typeof data === 'string' ? data : JSON.stringify(data)))\n\n        })\n    }\n    emit(id: string, event: string, data: any) {\n\n        // if the previous one was listen, remove it\n\n        if (tracker[id] && tracker[id].type === 'listen') {\n            delete listenEventToId[event]\n            this.socket.removeListener(event);\n\n\n        }\n        if (!tracker[id] || tracker[id].type != 'emit') {\n            this.emitTracker(id, {\n                type: 'emit',\n                event\n\n            })\n        }\n      \n        this.socket.emit(event, data)\n\n        this.emitActivity('emit', event,( typeof data == 'string' ? data : JSON.stringify(data)) )\n\n    }\n\n\n}\n/*\nversion 2 scripting\n\n\n    if (activeRequest.script) {\n                try {\n                    const newBody = await new Function(activeRequest.script)()(activeRequest.emitBody);\n                    if(!newBody){\n                        throw ''\n                    }\n\n                    return socketService.emit(activeRequest.id as any, activeRequest.event, newBody)\n\n                } catch (e) {\n                    toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i> Your script is invalid, skipping...` })\n\n\n                }\n\n            }\n\n*/\n\nconst socketService = new SocketService()\n\nexport default socketService","import React from 'react'\n\nexport default function TypePill(props: any){\n    return(\n        <small style={{width:'45px',verticalAlign:'top',marginTop:'-2px'}} className={'d-inline-block p-1  font-weight-bold ' + (props.type == 'emit' ? 'text-primary' : 'text-secondary')} >{ props.type}</small>\n    )\n}","import React from 'react'\nimport { prompter } from '../../../Providers/core.service'\nimport WorkspaceService from '../../../Providers/Workspace.service'\nimport DropdownClick from '../DropdownClick/DropdownClick'\n\n\nexport default function WorkspaceToggle(props: any) {\n    const activeWorkspace = WorkspaceService.getActiveWorkspaceKey()\n    const workspaces = WorkspaceService.getWorkspaces()\n    function changeWorkspace(key: string){\n        WorkspaceService.changeWorkspace(key)\n\n    }\n    async function addWorkspace(){\n        const name: any = await prompter('Enter workspace name')\n        WorkspaceService.addWorkspace(name)\n\n    }\n    \n    return (\n        <span className='d-inline-block' style={{verticalAlign: 'top'}}>\n            <DropdownClick style={{ width: '156px', top: '5px', position: 'relative' }} childBlock={true}>\n            <small className='d-block bg-primary cursor font-weight-bold border rounded p-1 text-white '>\n                <i className='fa fa-th'></i> {workspaces[activeWorkspace].name}  <i className='float-right mt-1 fa fa-angle-down ml-2'></i>\n            </small>\n\n            <div className='dropdown-click-close change-in-dark-1 border rounded bg-white '>\n                {(Object.values(workspaces) as any[]).map((w, i) => <small key={i} onClick={()=>changeWorkspace(w.key)} className='p-1 cursor d-block hover-collection'>{w.name}</small>)}\n\n\n\n                <small onClick={()=>addWorkspace()} className='p-1 cursor d-block hover-collection text-right'><i>Create new</i> <i className='fa fa-plus'></i></small>\n\n            </div>\n\n        </DropdownClick>\n        </span>\n    )\n}","import { WorkspaceService } from './Workspace.service';\nimport { toaster } from './core.service';\nimport { store } from '../store';\nimport { setStatus, addActivity } from '../store/actions/web-socket.action';\nimport { bodyTypeParser } from './helpers';\n\n\nlet status: any = {}\nclass WebSocketService {\n    // @ts-ignore\n    webSocket: WebSocket;\n    // @ts-ignore\n    host: string;\n    private initialize(host: string, cb?: any) {\n       \n            this.host = host;\n            this.webSocket = new WebSocket(host)\n\n        \n            this.webSocket.onopen =  () => {\n                toaster({ type: 'success', message: `<i class='fa fa-plug mr-2 '> </i>  Connected 🎉🎉` })\n                this.emitActivity('', false,'connected')\n                if(cb){\n                    cb(true)\n                }\n               \n       \n                status.connected = true\n                this.next()\n\n            \n\n\n        }\n        this.webSocket.onmessage = (data) => {\n\n\n            this.emitActivity(data, false)\n\n        }\n\n        this.webSocket.onclose = () => {\n\n            this.disconnect()\n\n        }\n      \n    }\n    public connect(host: string) {\n        this.initialize(host, () => {\n            const h = WorkspaceService.getWebSocketRequest()\n            const emitBody = bodyTypeParser(h.bodyType, h.emitBody)\n            this.emit(emitBody)\n\n        })\n  \n    }\n    private next() {\n        store.dispatch(setStatus(status))\n    }\n\n \n    public disconnect(forced?:boolean) {\n        if(forced){\n            this.webSocket.close()\n            return;\n        }\n        toaster({ type: 'danger', message: `<i class='fa fa-warning mr-2 '> </i>  Disconnected` })\n        this.emitActivity(\"\", false,'disconnected')\n        \n\n        status.connected = false\n    \n        this.next()\n     \n    }\n\n emitActivity(data: any, emit: boolean,name?: string){\n     data = typeof data == 'string' ? data : JSON.stringify(data)\n     store.dispatch(addActivity({data,emit: emit || false,name: name|| 'message'}))\n }\n    emit( data: any) {\n\n        this.emitActivity(data,true)\n\n        // if the previous one was listen, remove it\n\n       \n        this.webSocket.send( data)\n\n\n    }\n\n\n}\n\nconst webSocketService = new WebSocketService()\n\nexport default webSocketService;","import React, { useEffect, useRef, useState } from 'react'\nimport './WebSocketActivity.scss';\nimport { connect } from 'react-redux'\nimport { setTitle } from '../../../store/actions/app.action'\nimport Editor from '@monaco-editor/react';\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport TypePill from '../../misc/TypePill/TypePill';\n\n\nfunction WebSocketActivity(props: any) {\n  const eventsDisplayRef = useRef(null as unknown as HTMLDivElement);\n\n\n\n\n    useEffect(() => {\n\n\n        setTimeout(() => {\n            eventsDisplayRef.current?.scrollTo({\n                left: 0,\n                top: eventsDisplayRef.current.scrollHeight,\n                behavior: 'smooth'\n            })\n\n\n        }, 500)\n\n\n      \n        \n     \n\n    }, [props.webSocket.activities])\n\n \n\n\n    return (\n\n        <div className='WebSocketActivity'>\n            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}> Activity</div>\n       \n          <br />\n\n\n            <div ref={eventsDisplayRef} style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }}>\n                {(props.webSocket.activities as any[]).map((activity, i) => {\n          \n          const isActivityEmit = activity.emit\n                   return (\n                        <div key={i}>\n                           \n                            <div\n                                className={'p-2 text-color-default border rounded ' + (isActivityEmit ? 'border-primary' : 'border-secondary')}\n                                style={\n                                    {\n                                        marginLeft: (isActivityEmit ? '80px' : '0px'),\n                                        marginRight: (!isActivityEmit ? '80px' : '0px')\n                                    }\n\n\n                                }>\n                               <span style={{ display: 'block', textAlign: (isActivityEmit ? 'right' : 'left') }}>{activity.name} |   <TypePill type={isActivityEmit ? 'emit' : 'listen'} /></span>\n\n                                {activity.data && <div >\n                                    <Editor options={{\n                                        readOnly: true,\n                                        lineNumbers: \"off\",\n                                        scrollBeyondLastLine: false,\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        automaticLayout: true\n\n                                    }} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'}\n                                        height='50px'\n                                        value={activity.data} language=\"json\" />\n\n                                </div>}\n                            </div>\n                            <br />\n                           \n                        </div>\n                    )\n                })}\n\n\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    webSocket: state.webSocket\n})\n\n\nexport default connect(mapStateToProps, { setTitle })(WebSocketActivity)","import React, { useEffect, useRef, useState } from 'react'\nimport './WebSocketRequestView.scss';\nimport { connect } from 'react-redux'\nimport { setTitle, setActiveTree } from '../../../store/actions/app.action'\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport { sendToCollectionObs, toaster } from '../../../Providers/core.service';\nimport { CollectionRequest } from '../../types';\nimport CollectionsService, { WorkspaceService } from '../../../Providers/Workspace.service';\nimport webSocketService from '../../../Providers/web-socket.service';\nimport Activity from '../SocketIOActivity/SocketIOActivity';\nimport Editor, { ControlledEditor } from '@monaco-editor/react';\nimport * as envJson from '../../../env.json'\nimport Blank from '../../misc/Blank/Blank';\nimport { bodyTypeParser } from '../../../Providers/helpers';\nimport WebSocketActivity from '../WebSocketActivity/WebSocketActivity';\n\nconst bodyTypes = [\"string\", \"json\", \"object\", \"number\"]\nfunction WebSocketRequestView(props: any) {\n    const [saved, setSaved] = useState(true);\n    const [activeCellIndex, setActiveCellIndex] = useState(0);\n    const [activeRequest, setActiveRequest] = useState(WorkspaceService.getWebSocketRequest() as unknown as CollectionRequest);\n    const subs = useRef([] as any[])\n    const saveKeyRef = useRef(null as unknown as any);\n\n    const cells =  ['Body', 'Options'] \n\n\n\n    useEffect(() => {\n\n\n       props.setTitle('Web Socket')\n        if (envJson.prod && !saved) {\n            window.onbeforeunload = function (event: any) {\n                if (!saved) {\n                    save()\n                }\n                return true\n            };\n\n        }\n\n        saveKeyRef.current = function (event: any) {\n            var S: any = 83,\n                activeElement: any = document.activeElement;\n\n\n            if ((event.key === S || event.keyCode === S) && (event.metaKey || event.ctrlKey) && activeElement.nodeName === 'TEXTAREA') {\n\n                event.preventDefault();\n                if (!saved) {\n                    save()\n                }\n\n            }\n        }\n\n        document.addEventListener('keydown', saveKeyRef.current);\n\n\n\n        return () => {\n            subs.current.forEach((sub: any) => sub.unSubscribe())\n            // document.removeEventListener('keydown', saveKeyRef.current);\n\n\n        }\n\n    }, [activeRequest])\n\n    const user = props.app.userData;\n\n    const darkMode = props.app.darkMode;\n    function handleChange(e: any) {\n        if (saved) {\n            setSaved(false);\n        }\n    \n        const clone: any = { ...activeRequest }\n        clone[e.target.name] = e.target.value;\n        setActiveRequest(clone)\n\n\n\n    }\n    function save() {\n\n        CollectionsService.setWebSocketRequest(activeRequest)\n     \n        setSaved(true)\n\n    }\n  \n   \n\n    async function emit() {\n        let body: any = activeRequest.emitBody;\n        if (!props.webSocket.status.connected){\n            alert('connect first')\n\n            return\n        }\n\n        try {\n            body = bodyTypeParser(activeRequest.bodyType, activeRequest.emitBody)\n\n        } catch (e) {\n            toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Could not convert body to '${activeRequest.bodyType}', Sending body as string instead` })\n        }\n\n        webSocketService.emit(body)\n    }\n\n    const handleEditorChange = (ev: any, value: any, type: any) => {\n        setSaved(false)\n\n            setActiveRequest({ ...activeRequest, emitBody: value });\n     \n\n    };\n  \n\n\n    return (\n\n        <div className='WebSocketRequestView h-100'>\n\n            <div className='row h-100'>\n                <div className={'h-100 p-0 ' + (props.app.darkMode ? ' bg-dark ' : '') + ( 'border-right  col-md-9')}>\n                   \n                    <div style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }} className='p-2'>\n                        \n\n\n\n                            <div className='request-bar'>\n                            <div className='request-bar-item request-bar-item-1'>\n\n\n                                <div className=\"input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <select disabled={true} name=\"type\" defaultValue='emit' className='form-control'>\n                                            <option value='emit'>Emit</option>\n                                            <option value='listen'> Listen</option>\n                                        </select>\n\n                                    </div>\n\n                                    <input type=\"text\" disabled={true} defaultValue='message' name=\"event\" className=\"form-control\"  />\n\n                                </div>\n\n\n                            </div>\n                     \n                                <div className='request-bar-item request-bar-item-2'>\n                                    <button onClick={() => emit()} className=\"btn btn-secondary\" type=\"button\" >Send</button>\n                         \n                                </div>\n                                <div className='request-bar-item request-bar-item-3'>\n\n                                    {!saved && <button onClick={save} className=\"btn btn-outline-secondary\" type=\"button\">Save</button>}\n                                </div>\n\n                            </div>\n                        <br />\n                        <div className='text-color-default' style={{}}>\n                            {cells.map((cell, i) => {\n                                return (\n                                    <div onClick={() => setActiveCellIndex(i)} key={i} className={'cell mr-2 p-2  d-inline cursor ' + (activeCellIndex == i ? 'border-bottom border-secondary' : '')} style={{ borderBottomWidth: '5px' }}>\n                                        {cell}\n                                    </div>)\n                            })}\n                        </div>\n                        <br />\n                   \n                            {activeCellIndex == 0  &&\n\n                                <div>\n\n\n\n\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on'\n\n\n                                    }} height=\"calc(100vh - 300px)\" onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'emit')} value={activeRequest.emitBody || ''} language=\"json\" />\n                                </div>}\n\n                          {activeCellIndex == 1 &&\n\n                                <div>\n\n                                    <table className=\"table text-color-default\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Option</th>\n                                                <th scope=\"col\">Value</th>\n                                                <th scope=\"col\">Description</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n\n                                                <td> Body Type</td>\n                                                <td><select name=\"bodyType\" className='capitalize' onChange={handleChange} value={activeRequest.bodyType}> {bodyTypes.map((bodyType, i) => <option value={bodyType} key={i}>{bodyType}</option>)} </select>\n                                                </td>\n                                                <td className='small'>Determines what the body should be sent as </td>\n                                            </tr>\n                                  \n                                        </tbody>\n                                    </table>\n\n\n\n                                </div>}\n                         \n\n\n\n                        \n\n                    </div>\n                </div>\n                <div className={'col-md-3 h-100' }>\n                    <WebSocketActivity />\n\n\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    notifications: state.notifications,\n    socketIO: state.socketIO,\n    webSocket: state.webSocket\n})\n\n\nexport default connect(mapStateToProps, { setTitle, setActiveTree })(WebSocketRequestView)","import React, { useEffect, useRef, useState } from 'react'\nimport './SocketIOActivity.scss';\nimport { connect } from 'react-redux'\nimport { setTitle } from '../../../store/actions/app.action'\nimport Editor from '@monaco-editor/react';\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport TypePill from '../../misc/TypePill/TypePill';\n\nconst DEFAULTS = {\n    'listen-connect': true,\n    'listen-disconnect': true,\n}\n\nfunction SocketIOActivity(props: any) {\n    const [events, setEvents] = useState({} as any)\n    const eventsDisplayRef = useRef(null as unknown as HTMLDivElement);\n    function setEventRefF(hash: any) {\n    \n       \n\n  \n        const h = {...hash}\n\n        Object.keys(events).forEach(key => {\n            const prevValue = events[key]\n    \n\n            if (prevValue == undefined) {\n                h[key] =  true\n            }else {\n                h[key] = prevValue\n            }\n            \n\n\n        })\n\n\n       \n\n        setEvents(h)\n\n    }\n\nfunction keyGen(type: any,event: any){\n    return type + '-' + event\n}\n\n\n    useEffect(() => {\n\n\n        setTimeout(() => {\n            eventsDisplayRef.current?.scrollTo({\n                left: 0,\n                top: eventsDisplayRef.current.scrollHeight,\n                behavior: 'smooth'\n            })\n\n\n        }, 500)\n\n\n      \n        \n        const hash: any = {...DEFAULTS} ;\n        (Object.values(props.socketIO.tracker) as any[]).forEach(e => {\n            const key = keyGen(e.type, e.event);\n            hash[key] = true;\n\n        });\n\n        setEventRefF(hash)\n\n    }, [props.socketIO.activities, props.socketIO.tracker])\n\n \n    const totalEvents = Object.values(events);\n    const activeEvents = totalEvents.filter(_=>_) \n\n    return (\n\n        <div className='SocketIOActivity'>\n            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}> Activity</div>\n       \n            <DropdownClick onClick={(opened:boolean) => {\n               if(!opened){\n                  \n               }\n            }} block={true}>\n                <div className='border pr-3 pl-2 pt-2 pb-2 change-in-dark-1 rounded capitalize input-mimick cursor '>\n                    {activeEvents.length == totalEvents.length ? 'All' : (activeEvents.length + \" Events\")}\n                    <i className='fa fa-angle-down float-right '></i>\n                </div>\n\n                <div className='change-in-dark-1 capitalize p-2 input-mimick'>\n \n                    {Object.keys(events).map((k, i) => <div key={i} className=' '><>\n                        <input\n                            checked={events[k]}\n                        onChange={(e: any) => {\n                            \n                           setEvents({\n                               ...events, [k]:e.target.checked\n                           })\n                        }} type='checkbox' className='cursor mr-1' />\n                    {k}</></div>)}\n                </div>\n\n\n\n            </DropdownClick>\n            <br />\n\n\n            <div ref={eventsDisplayRef} style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }}>\n                {(props.socketIO.activities as any[]).map((activity, i) => {\n                    const isActivityEmit = activity.type == 'emit';\n                    const showEvent = events[keyGen(activity.type, activity.event)] != false\n                    return (\n                        <div key={i}>\n                            {showEvent ?<>\n                            <div\n                                className={'p-2 text-color-default border rounded ' + (isActivityEmit ? 'border-primary' : 'border-secondary')}\n                                style={\n                                    {\n                                        marginLeft: (isActivityEmit ? '80px' : '0px'),\n                                        marginRight: (!isActivityEmit ? '80px' : '0px')\n                                    }\n\n\n                                }>\n                                    <span style={{ display: 'block', textAlign: (isActivityEmit ? 'right' : 'left') }}>{activity.event} |   <TypePill type={(activity as any).type} /></span>\n\n                                {activity.data && <div >\n                                    <Editor options={{\n                                        readOnly: true,\n                                        lineNumbers: \"off\",\n                                        scrollBeyondLastLine: false,\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        automaticLayout: true\n\n                                    }} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'}\n                                        height='50px'\n                                        value={activity.data} language=\"json\" />\n\n                                </div>}\n                            </div>\n                            <br />\n                            </>: <></>}\n                        </div>\n                    )\n                })}\n\n\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    socketIO: state.socketIO\n})\n\n\nexport default connect(mapStateToProps, { setTitle })(SocketIOActivity)","import React from 'react'\n\n\nexport default function Blank(props: any) {\n    const isPc = window.innerWidth > 800;\n\n    return (\n        <div style={{\n            height: 'calc(100vh - 200px)',\n            display: 'flex',\n            alignItems: isPc ? 'center': '',\n\n            //    justifyContent: 'center'\n        }}>\n\n            <div className={'change-in-dark-1 ' + (isPc ? 'p-4' : '' )}>\n             \n\n                <span className='h3 d-block text-center'>Open a Request</span>\n                    <br />\n                <br />\n\n                <div className='row'>\n                    <div className='mb-3 col-md-6'>\n                        <b className='h4'>How to use</b>\n                        <ul className='h6 mt-2'>\n                            <li className='mb-2'>Connect  to socket url</li>\n\n                            <li className='mb-2'>Make an emit request </li>\n                            <li className='mb-2'>create a listen request</li>\n                            <li className='mb-2'>Receive the request from your server and emit back the listen event</li>\n\n                            <li className='mb-2'> Emit the <code>emit</code> request </li>\n                            <li className='mb-2'>Listen to the <code>listen</code> request</li>\n                        </ul>\n\n                    </div>\n                    <div className='mb-3 col-md-6'>\n                        <b className='h4'>Testing with socketio demo server </b>\n                        <ul className='h6 mt-2'>\n                            <li className='mb-2'>Connect  to socket url <code className='small'>https://socketio-chat-h9jt.herokuapp.com/</code></li>\n                            <li className='mb-2'>create a listen request <code className='small'>new message</code></li>\n                            <li className='mb-2'>Make an emit request  <code className='small'>add user</code> with message body as your username</li>\n                            <li className='mb-2'>Make another emit request  <code className='small'>new message</code> with message body</li>\n                     <li className='mb-2'> You will not see the <code className='small'>new message</code>  listener emitted back because the demo server does not send back your requests but you will see the messages of other people streaming down the activity bar  </li>\n                     </ul>\n\n                    </div></div>\n          \n            \n\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useRef, useState } from 'react'\nimport './SocketIORequestView.scss';\nimport { connect } from 'react-redux'\nimport { setTitle, setActiveTree } from '../../../store/actions/app.action'\nimport DropdownClick from '../../misc/DropdownClick/DropdownClick';\nimport { sendToCollectionObs, toaster } from '../../../Providers/core.service';\nimport { CollectionRequest } from '../../types';\nimport CollectionsService from '../../../Providers/Workspace.service';\nimport socketService from '../../../Providers/socket.service';\nimport Activity from '../SocketIOActivity/SocketIOActivity';\nimport Editor, { ControlledEditor } from '@monaco-editor/react';\nimport * as envJson from '../../../env.json'\nimport Blank from '../../misc/Blank/Blank';\nimport { bodyTypeParser } from '../../../Providers/helpers';\n\nconst bodyTypes = [\"string\",\"json\", \"object\",\"number\"]\nfunction SocketIORequestView(props: any) {\n    const [saved, setSaved] = useState(true);\n    const [requestTree, setRequestTree] = useState('');\n    const [activeCellIndex, setActiveCellIndex] = useState(0);\n    const [showDetails, setShowDetails] = useState(false);\n    const [showActivity, setShowActivity] = useState(true);\n    const [tabs, setTabs] = useState([] as any[])\n    const [activeRequest, setActiveRequest] = useState(null as unknown as CollectionRequest);\n    const subs = useRef([] as any[])\n    const navbarCriticalChangedRef = useRef(false);\n    const saveKeyRef = useRef(null as unknown as any);\n\n    const cells = activeRequest && activeRequest.type == 'emit' ? ['EmitBody', 'Options'] : ['ListenBody', 'Options']\n\n\n\n    useEffect(() => {\n\n\n        subs.current.push(sendToCollectionObs.subscribe((data: any) => {\n            if (!data) {\n                return\n            }\n\n            switch (data.type) {\n                case 'open-request':\n\n                    // if tab doesnt exist before, create a new pne\n                    if (tabs.indexOf(data.tree) == -1) {\n                        const tabsClone = [...tabs, data.tree];\n                        setTabs(tabsClone)\n                    }\n                    // if the previous request was not saved, save it\n                    if (!saved) {\n                        save()\n                    }\n\n\n                    // get old emitted message\n                    if (data.request.type == 'listen') {\n                        const plausibleOldEmittions = socketService.getLastListenEvent(data.request.event);\n                        // get old emittions, the ones that happened when yoy were away\n                        if (plausibleOldEmittions && plausibleOldEmittions != data.request.listenerBody) {\n                            data.request.listenerBody = plausibleOldEmittions\n\n                            toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Listen Body updated for this request` })\n                            setTimeout(() => {\n                                setSaved(false)\n                            }, 500);\n                        }\n\n\n\n\n                    }\n                    setActiveRequest(data.request)\n                    setRequestTree(data.tree)\n\n\n                    break;\n                case 'del-request':\n\n                    if (tabs.indexOf(data.tree) != -1) {\n                        deleteTab(data.tree)\n                    }\n                    break;\n                case 'rename-request':\n\n                    if (data.tree == requestTree) {\n                        setActiveRequest({ ...activeRequest, name: data.name })\n                    }\n                    break;\n            }\n\n\n\n        }\n\n        ))\n        props.setTitle(activeRequest ? activeRequest.name : '')\n        if (envJson.prod && !saved) {\n            window.onbeforeunload = function (event: any) {\n                if (!saved) {\n                    save()\n                }\n                return true\n            };\n\n        }\n\n        saveKeyRef.current = function (event: any) {\n            var S: any = 83,\n                activeElement: any = document.activeElement;\n           \n\n            if ((event.key === S || event.keyCode === S) && (event.metaKey || event.ctrlKey) && activeElement.nodeName === 'TEXTAREA') {\n              \n                    event.preventDefault();\n                   if(!saved){\n                       save()\n                   }\n                \n            }\n        }\n\n        document.addEventListener('keydown', saveKeyRef.current);\n    \n\n\n        return () => {\n            subs.current.forEach((sub: any) => sub.unSubscribe())\n           // document.removeEventListener('keydown', saveKeyRef.current);\n\n\n        }\n\n    }, [tabs, activeRequest])\n\n    const user = props.app.userData;\n\n    const darkMode = props.app.darkMode;\n    function handleChange(e: any) {\n        if (saved) {\n            setSaved(false);\n        }\n        if (e.target.name == 'name' || e.target.name == 'type') {\n            navbarCriticalChangedRef.current = true\n        }\n        const clone: any = { ...activeRequest }\n        clone[e.target.name] = e.target.value;\n        setActiveRequest(clone)\n\n\n\n    }\n    function save() {\n\n        CollectionsService.treeDataModifier({ emit: navbarCriticalChangedRef.current }, requestTree, (d: any) => {\n\n     \n            Object.keys(activeRequest).forEach(k => {\n                d[k] = activeRequest[k]\n            })\n        })\n        CollectionsService.generateRequestHash();\n        CollectionsService.persist();\n        setSaved(true)\n\n    }\n    function deleteTab(tab: string) {\n        const tabsClone = tabs.filter(t => t != tab);\n\n\n        if (tab == requestTree) {\n            save()\n\n            if (tabsClone.length > 0) {\n                activateTab(tabsClone[tabsClone.length - 1])\n            } else {\n                // clear the location request tree\n                props.history.push(window.location.pathname)\n                setActiveRequest(null as unknown as any);\n                setRequestTree('')\n            }\n\n\n        }\n\n\n\n        setTabs(tabsClone)\n\n    }\n    function activateTab(tree: string) {\n        if (tree == requestTree) {\n            return;\n        }\n        if (!saved) {\n            save()\n        }\n        // update the location request tree\n        props.history.push(window.location.pathname + '?requestTree=' + tree)\n        props.setActiveTree(tree)\n\n        const ids = tree.split('/')\n        const id = ids[ids.length - 1]\n\n        setActiveRequest(CollectionsService.getRequestFromId(id))\n        setRequestTree(tree)\n\n\n\n    }\n    function tabTreeToName(tree: string) {\n        const ids = tree.split('/')\n        const id = ids[ids.length - 1]\n        return CollectionsService.getRequestFromId(id)?.name\n    }\n\n\n    async function action(type: string) {\n        if (!props.socketIOIO.status.connected) {\n            toaster({ type: 'danger', message: `<i class='fa fa-info mr-2 '> </i>  You are not connected` })\n\n            return\n        }\n        if (type == 'emit') {\n            let body: any = activeRequest.emitBody;\n\n\n            try {\n                body = bodyTypeParser(activeRequest.bodyType, activeRequest.emitBody)\n             \n\n            } catch (e) {\n                toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Could not convert body to '${activeRequest.bodyType}', Sending body as string instead` })\n\n\n            }\n\n\n\n\n            socketService.emit(activeRequest.id as any, activeRequest.event, body)\n        } else if (type == 'listen') {\n            socketService.listen(activeRequest.id as any, activeRequest.event)\n\n        } else if (type == 'cancel-listen') {\n            socketService.cancelListen(activeRequest.id as any, activeRequest.event)\n        }\n    }\n\n    const alreadyListening = (activeRequest && props.socketIO.tracker[activeRequest.id] && props.socketIO.tracker[activeRequest.id].type == 'listen')\n\n    const handleEditorChange = (ev: any, value: any, type: any) => {\n        setSaved(false)\n        if (type == 'emit') {\n            setActiveRequest({ ...activeRequest, emitBody: value });\n        }\n        if (type == 'script') {\n            setActiveRequest({ ...activeRequest, script: value });\n        }\n\n    };\n    const editNameAndDescription = () => {\n\n        alert('coming soon......')\n    }\n\n\n\n    return (\n\n        <div className='SocketIORequestView h-100'>\n\n            <div className='row h-100'>\n                <div className={'h-100 p-0 ' + (props.app.darkMode ? ' bg-dark ' : '') + (showActivity ? 'border-right  col-md-9' : 'col-md-12')}>\n                    <div className={'pt-2 pl-2 pr-2 ' + (props.app.darkMode ? ' bg-dark-light ' : 'bg-default-light')} style={{ width: '100%', overflowX: 'auto', overflowY: 'hidden', whiteSpace: 'nowrap' }}>\n                        {tabs.map((tab, i) => <span key={i} className={'cursor p-1 text-color-default ' + (i == 0 ? ' ' : 'border-left ') + (tab == requestTree ? (props.app.darkMode ? ' bg-dark ' : 'bg-app') : '')}><span onClick={() => activateTab(tab)} className='mr-1 small font-weight-bold'> {tabTreeToName(tab)}</span> <span onClick={() => deleteTab(tab)}> <i className='fa fa-close'></i></span> </span>)}\n                    </div>\n                    <div style={{ height: 'calc(100vh - 180px)', overflow: 'auto' }} className='p-2'>\n                        {activeRequest ? <>\n\n\n                            <div className='change-in-dark-1 mb-2' style={{ marginTop: '5px' }}>\n                                <div className='float-right'>\n                                    <div onClick={() => setShowActivity(!showActivity)} className='cursor text-primary'>\n                                        {showActivity ? <>\n                                            <i className='fa fa-arrow-right'></i>\n                                        </> : <>\n                                                <i className='fa fa-arrow-left'></i>\n                                            </>}\n\n\n                                    </div>\n                                </div>\n                                <div><span className='cursor' onClick={() => setShowDetails(!showDetails)}><i style={{ width: '15px' }} className={' fa mr-1 ' + (showDetails ? 'fa-caret-down' : 'fa-caret-right')}></i>{activeRequest.name}</span> <span className='cursor small ml-2' onClick={() => editNameAndDescription()}><i className='fa fa-pen'></i></span></div>\n\n                                {showDetails &&\n\n                                    <div style={{ marginLeft: '15px' }} className=' small'>\n                                        {activeRequest.description ? <>{activeRequest.description}</> : <small className='cursor' onClick={() => editNameAndDescription()}>Add description<i className='fa fa-pen ml-2'></i></small>}\n                                    </div>\n                                }\n                            </div>\n\n                            <div className='request-bar'>\n                                <div className='request-bar-item request-bar-item-1'>\n\n\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <select disabled={activeRequest.type == 'listen' && alreadyListening} name=\"type\" onChange={handleChange} value={activeRequest.type} className='form-control'>\n                                                <option value='emit'>Emit</option>\n                                                <option value='listen'> Listen</option>\n                                            </select>\n\n                                        </div>\n\n                                        <input type=\"text\" disabled={activeRequest.type == 'listen' && alreadyListening} value={activeRequest.event} name=\"event\" onChange={handleChange} className=\"form-control\" placeholder={activeRequest.type == 'emit' ? \"Add emit event\" : \"Add listen event\"} />\n\n                                    </div>\n\n\n                                </div>\n                                <div className='request-bar-item request-bar-item-2'>\n                                    {activeRequest.type == 'emit' && <button onClick={() => action('emit')} className=\"btn btn-secondary\" type=\"button\" >Emit</button>}\n                                    {activeRequest.type == 'listen' && <button onClick={() => action(alreadyListening ? 'cancel-listen' : 'listen')} className=\"btn btn-secondary\" type=\"button\" >{alreadyListening ? 'Cancel listener' : 'Listen'}</button>}\n\n                                </div>\n                                <div className='request-bar-item request-bar-item-3'>\n\n                                    {!saved && <button onClick={save} className=\"btn btn-outline-secondary\" type=\"button\">Save</button>}\n                                </div>\n\n                            </div>\n                            <br />\n                            <div className='text-color-default' style={{}}>\n                                {cells.map((cell, i) => {\n                                    return (\n                                        <div onClick={() => setActiveCellIndex(i)} key={i} className={'cell mr-2 p-2  d-inline cursor ' + (activeCellIndex == i ? 'border-bottom border-secondary' : '')} style={{ borderBottomWidth: '5px' }}>\n                                            {cell}\n                                        </div>)\n                                })}\n                            </div>\n                            <br />\n\n                            {activeCellIndex == 0 && activeRequest.type == 'emit' &&\n\n                                <div>\n\n\n\n\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on'\n\n\n                                    }} height=\"calc(100vh - 300px)\" onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'emit')} value={activeRequest.emitBody || ''} language=\"json\" />\n                                </div>}\n\n                            {activeCellIndex == 0 && activeRequest.type == 'listen' &&\n\n                                <div>\n\n                                    <ControlledEditor theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n                                        readOnly: true\n\n                                    }} height=\"calc(100vh - 300px)\" value={activeRequest.listenerBody || ''} language=\"json\" />\n\n                                    <small className='text-color-default'>Listen body is automatically updated when this event is called</small>\n                                </div>}\n                            {activeCellIndex == 1 &&\n\n                                <div>\n\n                                    <table className=\"table text-color-default\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">Option</th>\n                                                <th scope=\"col\">Value</th>\n                                                <th scope=\"col\">Description</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n\n                                                <td> Body Type</td>\n                                                <td><select name=\"bodyType\" className='capitalize' onChange={handleChange} value={activeRequest.bodyType}> {bodyTypes.map((bodyType,i) => <option value={bodyType} key={i}>{bodyType}</option>)} </select>\n                                                </td>\n                                                <td className='small'>Determines what the body should be sent as for emit requests and also what type of body the listen requests are receiving</td>\n                                            </tr>\n                                            <tr>\n\n                                            <td> Initialize On Connect</td>\n                                            <td>{\n                                                // @ts-ignore\n                                                <select name=\"initializeOnConnect\" onChange={handleChange} value={activeRequest.initializeOnConnect || false} className=''>  <option value={true}>Yes</option>   <option value={false}>No</option>  </select>} </td>\n                                                <td className='small'>Determines if this listener should be automatically fired when a connection is made</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n\n\n                                </div>}\n                            {\n                                /*\n                            activeCellIndex == 2 &&\n\n                                <div>\n\n                                    <ControlledEditor onChange={(ev: any, value: any) => handleEditorChange(ev, value, 'script')} theme={props.app.darkMode ? 'vs-dark' : 'plugman-light'} options={{\n                                        minimap: {\n                                            enabled: false\n                                        },\n                                        wordWrap: 'on',\n\n\n                                    }} height=\"calc(100vh - 300px)\" value={activeRequest.script || ''} language=\"javascript\" />\n\n\n                                </div>\n                                */\n\n                            }\n\n\n\n                        </> : \n                        \n                       <Blank />\n                        }\n\n                    </div>\n                </div>\n                <div className={showActivity ? 'col-md-3 h-100' : \"d-none\"}>\n                    <Activity />\n\n\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\n\nconst mapStateToProps = (state: any) => ({\n\n    app: state.app,\n    notifications: state.notifications,\n    socketIO: state.socketIOIO\n})\n\n\nexport default connect(mapStateToProps, { setTitle, setActiveTree })(SocketIORequestView)","import React, { useState, useEffect, useRef } from 'react'\nimport './Layout.scss'\nimport { Route, Redirect, Link, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { loading } from '../../store/actions/network.action'\nimport { setUserData, toggleDarkMode, setActiveTree } from '../../store/actions/app.action'\nimport { confirmer, sendToCollectionObs, getId, prompter } from '../../Providers/core.service';\nimport * as envJson from '../../env.json'\nimport { toaster } from '../../Providers/core.service'\nimport DropdownClick from '../misc/DropdownClick/DropdownClick';\nimport * as storage from '../../Providers/storage.service'\nimport socketService from '../../Providers/socket.service';\n\nimport { CollectionFolder, CollectionRequest } from '../types';\nimport CollectionsService, { foldersObs, WorkspaceService } from '../../Providers/Workspace.service';\nimport { setTimeout } from 'timers';\nimport TypePill from '../misc/TypePill/TypePill';\nimport WorkspaceToggle from '../misc/WorkspaceToggle/WorkspaceToggle';\nimport { copy } from '../../Providers/helpers';\nimport WebSocketRequestView from '../modules/WebSocketRequestView/WebSocketRequestView';\nimport SocketIORequestView from '../modules/SocketIORequestView/SocketIORequestView';\nimport webSocketService from '../../Providers/web-socket.service';\n\nconst isPc = window.innerWidth > 800;\nfunction Layout(props: any) {\n\n\n\n\n    const [sidebarMin, setSidebarMin] = useState(!isPc) //isPc\n    const [isSocketIOConnection, setIsSocketIOConnection] = useState(WorkspaceService.getIsSocketIOConnection() ) //isPc\n    const [socketUrl, setSocketUrl] = useState(WorkspaceService.getServerUrl() || '')\n    const [lastSelectedFolderTree, setLastSelectedFolderTree] = useState('/')\n    const [collections, setCollections] = useState([] as any[])\n    const [contextMenu, setContextMenu] = useState(null as unknown as any);\n    const contextRef = useRef(null as unknown as any)\n    const lastFolderRef = useRef(null as unknown as any)\n    const collectionsModified = useRef(0)\n\n\n    const darkMode = props.app.darkMode;\n    const activeTree = props.app.activeTree;\n    const isSocketConnected = isSocketIOConnection ? props.socketIO.status.connected : props.webSocket.status.connected\n\n    function toggleDarkMode() {\n        props.toggleDarkMode()\n    }\n\n\n\n    useEffect(() => {\n        if (window.matchMedia('(prefers-color-scheme: dark)').matches && storage.darkMode.get() != 'true' && storage.dontAskDarkMode.get() != 'true'\n\n        ) {\n            confirmer(`We detected your ${isPc ? 'device' : 'phone'} is in dark mode, Do you want to change to dark mode ?`)\n                .then(_ => {\n                    if (!_) {\n                        return\n                    }\n                    toggleDarkMode()\n                })\n                .catch(() => {\n                    storage.dontAskDarkMode.set('true')\n\n                })\n        }\n\n\n        foldersObs.subscribe((data: any) => {\n\n            setCollections(data)\n        })\n\n        window.addEventListener('contextmenu', (e: any) => e.preventDefault());\n        if (socketUrl) {\n            if(isSocketIOConnection){\n                socketService.connect(socketUrl)\n            } else {\n                webSocketService.connect(socketUrl)\n\n            }\n\n\n      \n\n          \n        }\n\n        return () => {\n\n\n\n        }\n    }, [])\n\n    useEffect(() => {\n        if (collectionsModified.current == 1) {\n            const params = new URLSearchParams(window.location.search)\n            const paramsTree = params.get('requestTree');\n            if (paramsTree) {\n                onCollectionEvent('openRequest', paramsTree)\n            }\n        }\n\n        collectionsModified.current++\n        return () => {\n            // cleanup\n        };\n    }, [collections]);\n    useEffect(() => {\n        const f = () => {\n\n            if (!isPc && !sidebarMin) {\n                setSidebarMin(true)\n\n            } else {\n                window.removeEventListener('scroll', f)\n            }\n\n\n\n\n\n        }\n        setTimeout(() => {\n            window.addEventListener('scroll', f)\n\n        }, 1000);\n\n\n        return () => {\n            window.removeEventListener('scroll', f)\n\n        }\n    }, [sidebarMin])\n    const initLoadFinished = props.app.finishedAuthenticationAttempt;\n    const user = props.app.userData;\n\n    function sideBarBlur() {\n\n        if (isPc) {\n            return\n        }\n\n\n        if (!sidebarMin) {\n            setSidebarMin(true)\n        }\n\n\n\n    }\n    function idFromTree(tree: string) {\n        const h = tree.split('/');\n        return h[h.length - 1]\n\n    }\n    function changeCollection(id: number) {\n\n    }\n\n    async function onCollectionEvent(type: string, tree: string, treeName?: string, other?: any) {\n\n\n        if (type == 'toggleFolder') {\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any) => {\n                data.isFolderOpened = !(data.isFolderOpened || false)\n            })\n\n\n        } else if (type == 'openRequest') {\n\n            try {\n\n                if (tree == activeTree) {\n                    return\n                }\n\n                const request = CollectionsService.treeDataModifier({ emit: false }, tree).c\n\n                props.history.push(window.location.pathname + '?requestTree=' + tree)\n\n                props.setActiveTree(tree)\n\n                sendToCollectionObs.next({ type: 'open-request', request, tree })\n\n            } catch (e) {\n                props.history.push(window.location.pathname)\n\n            }\n\n        }\n\n        //create-request\n        //create-folder\n        //delete\n        //rename\n        else if (type == 'delete') {\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n\n                for (let index = 0; index < collectionTree.length; index++) {\n                    const t = collectionTree[index];\n                    if (t.id == data.id) {\n                        collectionTree[index] = false;\n                    }\n\n                }\n\n            })\n            sendToCollectionObs.next({ type: 'del-request', tree })\n            socketService.removeFromTrackerIfExist(idFromTree(tree))\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n        else if (type == 'rename') {\n\n            const name = await prompter('New Name', other)\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                data.name = name\n\n            })\n            sendToCollectionObs.next({ type: 'rename-request', tree, name })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n\n\n\n        }\n        else if (type == 'create-request') {\n            if (tree == '/') {\n                toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> It is not recommended to create a request that is not under a collection` })\n\n            }\n\n            let name = await prompter('Request Name')\n\n            if (!name) {\n                return\n            }\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (data) {\n                    data.children.push({\n                        id: getId(),\n                        name,\n                        type: 'emit',\n                        event: \"\"\n\n                    })\n                } else {\n\n                    collectionTree.push({\n                        id: getId(),\n                        name,\n                        type: 'emit',\n                        event: \"\"\n\n                    })\n                }\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        }\n        else if (type == 'create-folder') {\n            const name = await prompter((tree == '/' ? 'Collection' : 'Folder') + ' Name')\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (data) {\n                    data.children.push({\n                        id: getId(),\n                        name,\n                        isFolder: true,\n                        children: []\n\n                    })\n                } else {\n                    collectionTree.push({\n                        id: getId(),\n                        name,\n                        isFolder: true,\n                        children: []\n\n                    })\n                }\n\n            })\n\n            CollectionsService.generateRequestHash()\n            CollectionsService.persist()\n        } else if (type == 'copy') {\n\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n                if (!data) {\n                    return\n                }\n                copy(JSON.stringify(data))\n\n            })\n\n\n\n\n        } else if (type == 'paste') {\n            const clipboardText = await navigator.clipboard.readText()\n            CollectionsService.treeDataModifier({ emit: true }, tree, (data: any, collectionTree: any[]) => {\n\n                try {\n\n                    const parsed = JSON.parse(clipboardText);\n                    if (!parsed) {\n                        throw \"error\"\n                    }\n                    parsed.name = parsed.name + '_copy';\n                    parsed.id = getId();\n                    if (parsed.isFolder) {\n                        // @ts-ignore\n                        function w(children: any[]) {\n                            // change ids for all children\n                            let childrenRef = children || []\n\n                            for (let i = 0; i < childrenRef.length; i++) {\n\n                                if (childrenRef[i].isFolder) {\n                                    childrenRef[i].id = getId()\n\n                                    if (childrenRef[i].children && childrenRef[i].children.length > 0) {\n                                        w(childrenRef[i].children)\n                                    }\n\n                                } else {\n                                    childrenRef[i].id = getId()\n\n                                }\n\n\n\n                            }\n\n                        }\n\n                        w(parsed.children)\n\n\n                    }\n\n\n                    if (data) {\n                        data.children.push(parsed)\n                    } else {\n                        collectionTree.push(parsed)\n                    }\n\n                    CollectionsService.generateRequestHash()\n                    CollectionsService.persist()\n\n                } catch (e) {\n\n                }\n\n\n            })\n\n\n\n        }\n\n\n\n\n    }\n  \n    const  toggleIsSocketIOConnection = ()=> {\n        const val = isSocketIOConnection\n        if (isSocketConnected){\n\n            toaster({ type: 'info', message: `<i class='fa fa-info mr-2 '> </i> Disconnect before changing to ` + (val ? 'Websockets' : 'Socket-io') })\n\n\n            return\n        }\n   \n        setIsSocketIOConnection(!val);\n        WorkspaceService.setIsSocketIOConnection(!val);\n        setSocketUrl(WorkspaceService.getServerUrl() || '')\n    }\n\n    function lastFolderCB(tree?: any) {\n        if (tree) {\n            lastFolderRef.current = function (e: any) {\n                setLastSelectedFolderTree('/')\n\n\n            }\n\n            setTimeout(() => {\n                window.addEventListener('click', lastFolderRef.current)\n            }, 100)\n\n        } else {\n            window.removeEventListener('click', lastFolderRef.current)\n        }\n        setLastSelectedFolderTree(tree)\n    }\n    function setContextMenuF(data: any) {\n        if (data) {\n            contextRef.current = function (e: any) {\n                setContextMenu(null)\n\n            }\n\n            window.addEventListener('click', contextRef.current)\n        } else {\n            window.removeEventListener('click', contextRef.current)\n        }\n        setContextMenu(data)\n    }\n\n    function CollectionRenderer(props: any) {\n     \n        const collection: CollectionFolder | CollectionRequest = props.data;\n\n        // handles deleted collections\n        if (!collection) { return <></> }\n        const tree = (props.tree || '') + ('/' + collection.id);\n        const treeName = (props.treeName || '') + ('/' + collection.name);\n\n        const isFirstTree = props.tree == undefined\n\n  \n\n        return (\n            <div className='text-color-default cursor'>\n                {\n                    collection.isFolder ?\n                        <>\n                            <div onContextMenu={(e) => {\n\n\n                                setContextMenuF({\n                                    tree,\n                                    x: e.pageX,\n                                    y: e.pageY,\n                                    type: 'folder',\n                                    other: collection.name\n\n                                })\n\n                            }} className={'p-1 hover-collection ' + (tree == lastSelectedFolderTree ? 'bg-dark-light' : '') + (isFirstTree ? ' is-folder-collection border-top border-bottom ' : '')} onClick={() => { lastFolderCB(tree); onCollectionEvent('toggleFolder', tree, treeName) }}><i style={{ width: '15px' }} className={'fa mr-1 ' + (collection.isFolderOpened ? 'fa-angle-down' : 'fa-angle-right')}></i>{collection.name}</div>\n\n                            {collection.isFolderOpened && <div className={' ' + (isFirstTree ? '' : 'ml-2 border-left border-left-dotted')}> <div style={{ paddingLeft: isFirstTree ? '0px' : '10px' }}>{collection.children.map((c, i) => <div><CollectionRenderer key={i + tree} tree={tree} treeName={treeName} data={c} /></div>)}</div> </div>}\n\n                        </>\n                        :\n\n                        <>\n                            <div onContextMenu={(e) => {\n\n\n                                setContextMenuF({\n                                    tree,\n                                    x: e.pageX,\n                                    y: e.pageY,\n                                    type: 'request',\n                                    other: collection.name\n\n                                })\n                            }} className={'p-1 hover-collection ' + (tree == activeTree ? 'bg-dark-light' : '')} onClick={() => onCollectionEvent('openRequest', tree, treeName)}>\n\n                                <TypePill type={(collection as any).type} />\n\n                                {collection.name}</div>\n                        </>\n                }\n\n            </div>\n        )\n\n    }\n\n    function ContextMenu(props: any) {\n        const isFirstTree = (contextMenu.tree == undefined || contextMenu.tree == '/')\n\n        return (\n            <div className={'border rounded text-color-default ' + (darkMode ? 'bg-app-dark' : 'bg-white')} style={{ position: 'fixed', zIndex: 'auto', top: (contextMenu.y + 'px'), left: (contextMenu.x + 'px') }}>\n                {(contextMenu.type == 'folder' || contextMenu.type == 'request') && <div onClick={() => onCollectionEvent('copy', contextMenu.tree, contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className=' fa fa-copy mr-2'></i> Copy</div>}\n                {(contextMenu.type == 'folder' || contextMenu.type == 'blank') && <div onClick={() => onCollectionEvent('paste', contextMenu.tree, contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className=' fa fa-paste mr-2'></i> Paste</div>}\n\n                {(contextMenu.type == 'folder' || contextMenu.type == 'blank') && <div onClick={() => onCollectionEvent('create-request', contextMenu.tree, contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className={' fa fa fa-file-medical mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Create Request</div>}\n                {(contextMenu.type == 'folder' || contextMenu.type == 'blank') && <div onClick={() => onCollectionEvent('create-folder', contextMenu.tree, contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className={' fa fa-folder-plus mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Create {isFirstTree ? 'Collection' : 'Folder'}</div>}\n                {(contextMenu.type == 'folder' || contextMenu.type == 'request') && <div onClick={() => onCollectionEvent('rename', contextMenu.tree, contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className={' fa fa-pen mr-2 ' + (darkMode ? 'text-white' : 'text-dark')}></i> Rename</div>}\n                {(contextMenu.type == 'folder' || contextMenu.type == 'request') && <div onClick={() => onCollectionEvent('delete', contextMenu.tree, contextMenu.treeName, contextMenu.other)} className='pr-2 pl-2 pt-1 pb-1 cursor hover-collection '> <i className='text-danger fa fa-trash mr-2'></i> Delete</div>}\n\n            </div>\n        )\n\n\n    }\n\n    return (\n        <>\n            {user ?\n                <div className={(sidebarMin ? 'Layout ' : 'Layout sidebar-max ') + (darkMode ? 'bg-app-dark' : '')}>\n\n\n                    <div\n\n\n\n                        className={'ml-2 mt-2 mb-2 sidebar border box-shadow pt-3 ' + (darkMode ? 'bg-app-dark' : 'bg-app-default')} >\n                        <div className='pl-4  sidebar-logo text-color-default mb-2'>\n                            <div className='d-inline-block sidebar-nav-inner'>\n                                <span\n                                    style={{ marginLeft: '-5px' }}\n                                    className='text-center mb-2 d-block'>\n\n                                    <span onClick={() => setSidebarMin(!sidebarMin)}>\n                                        <img style={{ width: '30px', height: '30px', position: 'relative', top: '-5px' }} src='/logo.png' className=' mr-3' />\n                                        {!sidebarMin && <b className='text-dark pt-2' style={{ fontSize: '25px' }}>PlugMan 🚀 </b>}\n                                    </span>\n                                    {!sidebarMin && <a className='ml-2 text-color-default' target=\"_blank\" href='https://github.com/ayotycoon/plugman'><i className='fab fa-github'></i></a>}\n                                    {!sidebarMin && <span className='d-block text-left' >\n                                        <small className='text-color-default' >\n                                            S{isSocketIOConnection && <span>ocket-io</span>} <span title={'Change to ' + (!isSocketIOConnection ? 'Socket io' : 'Websockets')} onClick={toggleIsSocketIOConnection} style={{ fontSize: '14px', transform: isSocketIOConnection ? 'rotate(180deg)' : '' }} className='cursor d-inline-block fa fa-toggle-on'></span>  W{!isSocketIOConnection && <span>eb-socket</span>}\n                                    </small>\n\n                                        <small className='float-right text-color-default' >\n                                            v {envJson.version}\n                                        </small>\n\n                                    </span>}\n\n                                </span>\n\n                            </div>\n\n\n                        </div>\n\n\n\n\n\n                      {isSocketIOConnection ?\n                        <div>\n                            \n                            <div className='pr-2 pl-2 pb-1 pt-1  border-bottom text-color-default '>\n                                <span title='Create request' onClick={() => {\n                                    onCollectionEvent('create-request', lastSelectedFolderTree || '/');\n                                }} className='cursor mr-2'><i className='fa fa-file-medical'></i></span>\n                                <span title='Create folder' onClick={() => {\n                                    onCollectionEvent('create-folder', lastSelectedFolderTree || '/');\n                                }} className='cursor mr-2'><i className='fa fa-folder-plus'></i></span>\n                            </div>\n                             <div className={'CollectionRendererContainer ' + (sidebarMin ? 'd-none' : '')}\n                                style={{ height: 'calc(100vh - 350px)', overflowY: 'auto', overflowX: 'auto', whiteSpace: 'nowrap', width: '100%', }}>\n\n                                {contextMenu && <ContextMenu />}\n\n                                {collections.map((collection, i) => <CollectionRenderer key={i} data={collection} />)}\n\n                                <div\n                                    onContextMenu={(e) => {\n                                        setContextMenuF({\n                                            tree: '/',\n                                            x: e.pageX,\n                                            y: e.pageY,\n                                            type: 'blank'\n\n                                        })\n                                    }}\n\n                                    className='h-100'>\n\n                                </div>\n                            </div>\n                        </div>\n                            : <div className={'p-2 ' + (sidebarMin ? 'd-none' : '')}>\n                             <div className='small text-color-default text-center '>\n    \n                                    Pure Websocket only listens and emits to the \"message\" event, therefore this is the only event that can be sent and listened to.\n    <hr  />\n    Only one emit request is provided, listen responses can be seen on the activity bar\n    \n    </div>\n    </div>\n    }\n\n\n\n\n\n\n\n\n                        <div className={'p-2 ' + (sidebarMin ? 'd-none' : '')} style={{ position: 'absolute', bottom: '30px' }}>\n                            <input onChange={(e: any) => {\n                                setSocketUrl(e.target.value)\n                            }} disabled={isSocketConnected} className='form-control small' value={socketUrl} placeholder='Enter socket url' />\n\n                            <div className='mt-1'>{!isSocketConnected ? <> <button onClick={() => {\n                                WorkspaceService.setServerUrl(socketUrl);\n                                if(isSocketIOConnection){\n\n                                    socketService.connect(socketUrl)\n                                }else{\n                                    webSocketService.connect(socketUrl)\n                                }\n                           \n                            }} disabled={!socketUrl} className='btn btn-sm btn-primary'>Connect</button> </> : <button onClick={() => {\n                                    if (isSocketIOConnection) {\n                                        socketService.disconnect()\n                                    }else{\n                                        webSocketService.disconnect(true)\n                                    }\n                                \n                            }} className='btn btn-sm btn-outline-primary'>Disconnect</button>}\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className={'topbar ' + (!darkMode ? 'bg-app-default' : 'bg-app-dark')}>\n                        <span app-data-intro='Displays the current page you are on. Can also click here to show or hide sidebar' app-data-step='2' className='small '>\n                            <span className='change-in-dark-1'>\n                                <b  >  {props.app.title.title || <>...</>}\n\n\n                                    {props.app.title.icon &&\n\n                                        <i className={'ml-2 ' + props.app.title.icon} > </i>\n                                    }\n\n                                </b>\n                            </span>\n                        </span>\n\n\n\n\n                        <div className='float-right'>\n                            {props.network.loading &&\n\n                                <i style={{ position: 'relative', top: '3px' }} className=' fa fa-sync spin mr-2'></i>\n                            }\n\n\n                            <WorkspaceToggle />\n\n\n                            <span className='cursor text-center'>\n                                <span style={{ top: '5px', position: 'relative' }} onClick={toggleDarkMode} className='pl-2'>\n\n                                    {!darkMode ? <i style={{ fontSize: '20px' }} className=' far fa-moon'></i> : <i className='text-white fa fa-sun'></i>}\n                                </span>\n\n                            </span>\n\n                            {false && <DropdownClick>\n                                <span className='cursor text-center'>\n                                    <span style={{ top: '5px', position: 'relative' }} className='pl-2 text-dark'>\n                                        <i className='far fa-bell' style={{ fontSize: '20px' }}></i>\n\n                                    </span>\n\n                                </span>\n\n                                <div className='dropdown-click-close change-in-dark-1 border rounded p-2 bg-white ' style={{ width: '200px', position: 'relative', left: isPc ? `-170px` : '-170px' }}>\n                                    notifications\n\n                                    </div>\n\n                            </DropdownClick>}\n\n\n\n\n\n\n                        </div>\n                    </div>\n\n\n\n\n                    <div onClick={sideBarBlur} style={{ height: '100vh' }} className={'content ' + (!darkMode ? 'bg-app-default' : 'bg-app-dark')}>\n\n                        <Switch>\n\n                            <Route exact path=\"/\">\n                                <Redirect to='/request' />\n                            </Route>\n                          \n\n                            <Route exact path=\"/request\" component={isSocketIOConnection ? SocketIORequestView : WebSocketRequestView} />\n\n                            <Redirect path='**' to='/404' />\n                        </Switch>\n\n\n\n                    </div>\n\n                </div>\n                : <div className={'splash-container ' + (darkMode ? 'bg-app-dark' : '')}>\n                    <div className='d-inline-block'>\n                        <img src='/logo.png' />\n                        <br></br>\n                        <div className='loader'>\n                            <div className='bar bg-primary'>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>}</>)\n\n}\n\n\n\nconst mapStateToProps = (state: any) => ({\n    network: state.network,\n    app: state.app,\n    notifications: state.notifications,\n    socketIO: state.socketIO,\n    webSocket: state.webSocket\n})\n\nexport default connect(mapStateToProps, { loading, setUserData, toggleDarkMode, setActiveTree })(Layout)","import React from 'react'\nimport './Modal.scss'\n\ninterface ModalI {\n    title?: string;\n    zIndex?: number;\n    preventCloseOnClickOutside?: boolean;\n    jsx?: boolean;\n\n    type?: 'loading';\n    onClose?: CallableFunction;\n    children?: any;\n}\n\n\nfunction Modal(props: ModalI) {\n\n    function onClose() {\n        if (props.onClose) {\n            props.onClose()\n        }\n    }\n    function clickedOutside(e: any) {\n        if (e.target.className.match('Modal-center') && props.type !== 'loading' && !props.preventCloseOnClickOutside) {\n            onClose()\n        }\n    }\n\n    return (\n        <div className='Modal Modal-center ' style={{ zIndex: props.type === 'loading' ? 100 : (props.zIndex || 30) }} onClick={clickedOutside}>\n\n            <div className={'Modal-inner p-3 rounded' + (props.type === 'loading' ? ' ' : ' bg-white')}>\n                <div className='Modal-inner-heading'>\n                    <div className='Modal-inner-heading-text'>\n                        <h4 className='font-weight-bold'>{props.title}</h4>\n                    </div>\n                    {props.type !== 'loading' &&\n                        <div className='Modal-inner-heading-close-container'>\n                            <div onClick={onClose} className='Modal-close bg-danger'>\n                                <i className='fa fa-close text-white'>\n\n                                </i>\n                            </div>\n                        </div>}\n\n\n                </div>\n                {!props.jsx && <div dangerouslySetInnerHTML={{ __html: props.children }}></div>}\n                {props.jsx && props.children}\n\n\n                {props.type === 'loading' &&\n\n                    <div className='text-center'>\n\n                        <img src='/assets/loader.svg' />\n                    </div>\n                }\n\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Modal;","import React, { useState, useEffect, useRef } from 'react'\nimport './Overlay.scss'\nimport { toastObs, alertObs, shareObs, modalObs, confirmObs, selectObs, promptObs, toaster } from '../../../Providers/core.service'\nimport Modal from '../Modal/Modal'\n\nimport { copy as helperCopy } from '../../../Providers/helpers'\n\n\n\n\nfunction Overlay() {\n    const [toastData, setToastData] = useState(null as any)\n    const [shareContent, setShareContent] = useState(null as any);\n    const [modalContent, setModalContent] = useState(null as any);\n    const [confirmContent, setConfirmContent] = useState(null as any);\n    const [alertContent, setAlertContent] = useState(null as any);\n    const [selectContent, setSelectContent] = useState(null as any);\n    const [promptContent, setPromptContent] = useState(null as any);\n    const res = useRef(null as any)\n\n    useEffect(() => {\n        toastObs.subscribe((incomingToastData: any) => {\n\n            if (incomingToastData) {\n                setToastData(incomingToastData)\n            } else {\n                setToastData(null)\n            }\n\n        })\n        shareObs.subscribe((incomingShareContent: any) => {\n\n            if (incomingShareContent) {\n                setShareContent(incomingShareContent)\n            } else {\n                setShareContent(null)\n            }\n\n        })\n        modalObs.subscribe((incomingModalContent: any) => {\n\n            if (incomingModalContent) {\n                setModalContent(incomingModalContent)\n                res.current = incomingModalContent.cb\n            } else {\n                setModalContent(null)\n            }\n\n        })\n        confirmObs.subscribe((incomingConfirmContent: any) => {\n\n            if (incomingConfirmContent) {\n                setConfirmContent(incomingConfirmContent)\n                res.current = incomingConfirmContent.cb\n\n            } else {\n                //setConfirmContent(null)\n            }\n\n        })\n        alertObs.subscribe((incomingAlertContent: any) => {\n\n            if (incomingAlertContent) {\n                setAlertContent(incomingAlertContent)\n\n            } else {\n                //setConfirmContent(null)\n            }\n\n        })\n        selectObs.subscribe((incomingSelectContent: any) => {\n\n            if (incomingSelectContent) {\n                setSelectContent(incomingSelectContent)\n                res.current = incomingSelectContent.cb\n\n            } else {\n                setSelectContent(null)\n            }\n        })\n        promptObs.subscribe((incomingPromptContent: any) => {\n\n            if (incomingPromptContent) {\n                setPromptContent(incomingPromptContent)\n\n                res.current = incomingPromptContent.cb\n\n            } else {\n                setPromptContent(null)\n            }\n\n        })\n\n\n\n\n\n\n\n\n\n    }, [])\n\n\n\n    function hideAttentionToast() {\n        toastObs.next({ ...toastData, incoming: false })\n        setTimeout(() => {\n            toastObs.next(null)\n        }, 500);\n    }\n\n\n    return (\n        <>\n            {shareContent && <Modal jsx={true} title='Share' onClose={() => { setShareContent(null) }} >\n                <div className='text-center'>\n                    {\n                        [\n                            {\n                                icon: 'fa fa-copy', name: 'Copy', onClick: () => {\n                                    helperCopy(shareContent)\n                                    toaster({ message: 'Successfully copied link' })\n\n\n\n                                }\n                            },\n                            {\n                                icon: 'fab fa-whatsapp', name: 'whatsapp', onClick: () => {\n\n                                    helperCopy(shareContent)\n\n                                    window.open(`whatsapp://send?${encodeURIComponent(shareContent)}`);\n                                }\n                            },\n                        \n                            {\n                                icon: 'fab fa-twitter', name: 'twitter', onClick: () => {\n\n                                    window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(shareContent)}`, '_blank');\n\n\n                                }\n                            },\n\n                        ]\n                            .map((media, index) => {\n                                return (\n                                    <div key={index}  className='mt-2'>\n                                        <div onClick={media.onClick} className='d-inline-block'>\n                                        <i className={media.icon} style={{ fontSize: '40px' }} />\n                                        <br />\n                                        {media.name}\n                                        </div>\n\n                                    </div>\n                                )\n                            })\n                    }\n                </div>\n\n\n            </Modal>}\n\n\n\n\n            {modalContent && <Modal type={modalContent.type} title={modalContent.title} onClose={() => { setModalContent(null); res.current(true) }} > {modalContent.body}</Modal>}\n            {confirmContent &&\n\n                <Modal preventCloseOnClickOutside={true} jsx={true} title={'Confirm'} onClose={() => { res.current(false, true); setConfirmContent(null) }} > {confirmContent.text}\n\n                    {confirmContent.body && <>\n                        <br />\n\n                        <span dangerouslySetInnerHTML={{ __html: confirmContent.body }}></span>\n                    </>}\n                    <hr />\n                    <div className='row'>\n                        <div className='col-6'>\n                            <button onClick={() => { res.current(true); setConfirmContent(null) }} className='btn btn-primary'>Yes</button>\n                        </div>\n                        <div className='col-6 text-right'>\n\n                            <button onClick={() => { res.current(false); setConfirmContent(null) }} className='btn text-danger'>No</button>\n                        </div>\n                    </div>\n                </Modal>}\n\n\n            {alertContent &&\n\n                <Modal zIndex={100} preventCloseOnClickOutside={true} jsx={true} title={'Alert'} onClose={() => { setAlertContent(null) }} > {alertContent.text}\n\n                    {alertContent.body && <>\n                        <br />\n\n                        <span dangerouslySetInnerHTML={{ __html: alertContent.body }}></span>\n                    </>}\n               \n\n                 \n                </Modal>}\n\n\n\n            {selectContent && <Modal jsx={true} preventCloseOnClickOutside={true} title={selectContent.title}\n                onClose={() => { res.current(false, true); setSelectContent(null) }} >\n                {selectContent.options.map((option: any, index: number) => {\n                    const optionText = option.option || option;\n                    const optionInfo = option.info;\n\n                    return (\n                        <div key={index}>\n                            <input value={optionText} onChange={(e: any) => setSelectContent({ ...selectContent, value: e.target.value })} name='selector' type='radio' className='mr-2' id={'selector-' + optionText}></input>\n\n                            <label htmlFor={'selector-' + optionText}>{optionText}</label>\n                            {optionInfo && <span className='float-right each-select'><i className='fa fa-question-circle '></i>\n\n                                <div className='select-info bg-info rounded p-2 text-white'>\n                                    {optionInfo}\n                                </div>\n\n                            </span>}\n                            <br />\n                        </div>\n                    )\n                })}\n\n                <hr />\n                <div className='text-center'>\n                    <div className='btn btn-group'>\n                        {selectContent.value && <button onClick={() => { res.current(selectContent.value); setSelectContent(null) }} className='btn btn-primary'>Ok</button>}\n\n\n                        <button onClick={() => { res.current(false); setSelectContent(null) }} className='btn btn-outline-danger'>Cancel</button>\n                    </div>\n                </div>\n\n            </Modal>}\n\n\n            {promptContent && <Modal jsx={true} preventCloseOnClickOutside={true} title={promptContent.text}\n                onClose={() => { res.current(false, true); setPromptContent(null) }} >\n                <input value={promptContent.value} onChange={(e: any) => setPromptContent({ ...promptContent, value: e.target.value })} className='form-control'></input>\n\n\n                <hr />\n                <div className='text-center'>\n                    <div className='btn btn-group'>\n                        {promptContent.value && <button onClick={() => { res.current(promptContent.value); setPromptContent(null) }} className='btn btn-primary'>Ok</button>}\n\n\n                        <button onClick={() => { res.current(false); setPromptContent(null) }} className='btn btn-outline-danger'>Cancel</button>\n                    </div>\n                </div>\n\n            </Modal>}\n\n\n            {toastData &&\n                <div className={'Alert animated pt-3 pl-3 ' + (toastData.incoming ? ' fadeIn' : 'fadeOut') + (toastData.attention ? ' alert-attention' : '')}>\n                    <div className={`d-inline-block animated alert-inner box-shadow rounded alert alert-${toastData.type || 'info'}` + (toastData.incoming ? ' slideInDown' : ' slideOutUp')}>\n                        <span dangerouslySetInnerHTML={{ __html: toastData.message }}></span>\n\n                        {toastData.attention && <div>\n                            <hr />\n                            <button onClick={hideAttentionToast} className={'btn btn-sm btn-' + (toastData.type || 'info')}>\n                                Ok\n                        </button>\n\n                        </div>}\n                    </div>\n                </div>}</>\n\n    )\n\n}\n\nexport default Overlay;","import React, { useEffect } from 'react';\nimport './App.scss';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { store, Provider } from './store'\nimport { monaco } from '@monaco-editor/react';\n\nimport Layout from './components/Layout/Layout';\nimport Overlay from './components/misc/Overlay/Overlay';\n\n\nconst log = console.log;\nconsole.log = (...args : any) => {\n\n   if(process.env.NODE_ENV !== 'development'){\n    return\n   }\n    log(...args);\n\n}\n\nmonaco\n    .init()\n    .then(monaco => {\n        const theme = {\n            base: 'vs',\n            inherit: true,\n            colors: {\n                \"editor.background\": '#f6f7fa'\n            },\n           rules: [\n                { token: 'green', background: 'FF0000', foreground: '00FF00', fontStyle: 'italic' },\n                { token: 'red', foreground: 'FF0000', fontStyle: 'bold underline' },\n                { background: '000000' },\n                { foreground: '000000' }\n            ],\n        }\n        monaco.editor.defineTheme('plugman-light', theme)\n\n    \n})\n\nfunction App() {\n    useEffect(() => {\n \n        \n        return () => {\n        \n        };\n    }, []);\n\n\n    return (\n        <Provider store={store}>\n            <Overlay />\n            \n      \n            <Router>\n                \n                <Switch>\n               \n                \n                    <Route path=\"/\" component={Layout}>\n                    </Route>\n                  \n\n                </Switch>\n            </Router >\n        </Provider>\n    );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n    \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      //console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        //console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}